@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject NavigationManager NavigationManager


@if (string.IsNullOrWhiteSpace(Model.Name) == false)
{
    <TitleTip Title="@("编辑 " + Model.Name)"></TitleTip>
}
else
{
    <TitleTip></TitleTip>

}
<CnGalWebSite.Shared.AppComponent.Pages.Account.HeadBar Title="@Model.Name" />

<div style=" margin-top: 45px; width: 100%;margin-bottom:65px;">
    @if (isReady == false)
    {
        <CnGalWebSite.Shared.AppComponent.Normal.Loading.LoadingTip />
    }
    else
    {
        @if (Model.Type == EntryType.Staff)
        {
            <div class="alert alert-danger  rounded shadow-sm  rounded" role="alert">
                这个词条可能涉及到现实人物，请勿过分较真，也请谨慎编辑，仔细斟酌词句
            </div>
        }
        else
        {

        }
        <div class="ps-3 pe-3 pt-2 mb-3">
            <CnGalWebSite.Shared.AppComponent.Normal.Titles.TitleLine Title="编辑附加信息" />



            @switch (Model.Type)
            {
                case EntryType.Game:
                    <div class="row">
                        <div class="form-group col-12  col-sm-6 mt-2">
                            <BootstrapInput @bind-Value="Model.SteamId" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <DateTimePicker @bind-Value="@Model.IssueTime" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="@Model.IssueTimeString" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.Original" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <AutoComplete Items="@EntryGroupItems" IsLikeMatch="true" IgnoreCase="true" @bind-Value="Model.ProductionGroup" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.Engine" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.Publisher" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.IssueMethod" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.OfficialWebsite" ShowLabel="true" />
                        </div>

                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.QQgroupGame" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12">
                            <CheckboxList @bind-Value="@GamePlatformsValue" ShowBorder="true" Items="@GamePlatforms" DisplayText="游戏平台" ShowLabel="true"></CheckboxList>
                        </div>
                    </div>
                    <CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListStaff Staffs="Model.Staffs" @ref="staffEditor"></CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListStaff>

                    break;
                case EntryType.ProductionGroup:
                    <ValidateForm Model="@Model" ValidateAllProperties="true">
                        <div class="row">
                            <div class="form-group col-12  col-sm-6">
                                <BootstrapInput @bind-Value="Model.QQgroupGroup" />
                            </div>
                        </div>
                    </ValidateForm>
                    break;
                case EntryType.Role:
                    <div class="row">
                        <div class="form-group col-12  col-sm-6">
                            <AutoComplete Items="@EntryStaffItems" IsLikeMatch="true" IgnoreCase="true" @bind-Value="Model.CV" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <Select @bind-Value="Model.Gender" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.FigureData" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.FigureSubjective" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <DateTimePicker @bind-Value="@Model.Birthday" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.Haircolor" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.Pupilcolor" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.ClothesAccessories" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.Character" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.RoleIdentity" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.BloodType" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.RoleHeight" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.RoleTaste" ShowLabel="true" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.RoleAge" ShowLabel="true" />
                        </div>

                    </div>
                    break;
                case EntryType.Staff:
                    <ValidateForm Model="@Model" ValidateAllProperties="true">
                        <div class="row">
                            <div class="form-group col-12  col-sm-6">
                                <BootstrapInput @bind-Value="Model.Nickname" />
                            </div>
                        </div>
                    </ValidateForm>
                    break;
            }
            <CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListSocialPlatform Model="Model.SocialPlatforms" Title="相关网站"></CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListSocialPlatform>
        </div>

    }

</div>
<CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.EditFooter OnSubmit="OnSubmit" />

@code {

    [Parameter]
    public string Id { get; set; }
    public EditAddInforViewModel Model { get; set; } = new EditAddInforViewModel
    {
        Staffs = new List<StaffModel>(),
        GamePlatforms = new List<GamePlatformModel>(),
        SocialPlatforms = new List<SocialPlatform>()

    };
    [Display(Name = "游戏平台")]
    List<SelectedItem> GamePlatforms { get; set; } = new List<SelectedItem>();
    [Display(Name = "游戏平台")]
    private List<string> GamePlatformsValue { get; set; } = new List<string>();
    private bool isReady = false;
    private IEnumerable<string> EntryGroupItems { get; set; } = new string[1] { "" };
    private IEnumerable<string> EntryStaffItems { get; set; } = new string[1] { "" };

    [NotNull]
    private CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListStaff? staffEditor { get; set; }

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            //获取词条信息
            Model = await Http.GetFromJsonAsync<EditAddInforViewModel>(ToolHelper.WebApiPath + "api/entries/EditAddInfor/" + Id);
            //获取所有词条
            EntryGroupItems = await Http.GetFromJsonAsync<List<string>>(ToolHelper.WebApiPath + "api/entries/GetAllEntries/2");
            EntryStaffItems = await Http.GetFromJsonAsync<List<string>>(ToolHelper.WebApiPath + "api/entries/GetAllEntries/3");

            //设置游戏平台
            if (Model.Type == EntryType.Game)
            {
                foreach (var item in Model.GamePlatforms)
                {
                    GamePlatforms.Add(new SelectedItem
                    {
                        Text = item.GamePlatformType.ToString(),
                        Value = item.GamePlatformType.ToString(),
                        Active = item.IsSelected
                    });
                    if (item.IsSelected == true)
                    {
                        GamePlatformsValue.Add(item.GamePlatformType.ToString());
                    }
                }
            }
            isReady = true;
        }
        catch(Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取编辑词条附加信息失败");
        }
    }

    private async Task OnSubmit(string text)
    {
        //上传
        try
        {
            //调整时间
            if (Model.IssueTime != null)
            {
                Model.IssueTime = Model.IssueTime.Value.AddHours(Model.IssueTime.Value.Hour < 12 ? (12 - Model.IssueTime.Value.Hour) : 0);
            }
            if (Model.Birthday != null)
            {
                Model.Birthday = Model.Birthday.Value.AddHours(Model.Birthday.Value.Hour < 12 ? (12 - Model.Birthday.Value.Hour) : 0);
            }
            //复制staff数据
            if (staffEditor != null)
            {
                Model.Staffs = staffEditor.Staffs;
            }
            //检查staff数据
            if (Model.Staffs != null)
            {
                foreach (var item in Model.Staffs)
                {
                    if (string.IsNullOrWhiteSpace(item.PositionOfficial))
                    {
                        await ToastService.Error("Staff必须填写官方职位", "Staff必须填写官方职位");
                        return;
                    }
                    if (string.IsNullOrWhiteSpace(item.NicknameOfficial))
                    {
                        await ToastService.Error("Staff必须填写官方昵称", "Staff必须填写官方昵称");
                        return;
                    }
                }
            }

            //处理游戏平台数据
            Model.GamePlatforms = new List<GamePlatformModel>();
            foreach (var item in GamePlatforms)
            {
                bool isSelected = false;
                foreach (var infor in GamePlatformsValue)
                {
                    if (infor == item.Value)
                    {
                        isSelected = true;
                    }
                }
                Model.GamePlatforms.Add(new GamePlatformModel
                {
                    GamePlatformType = (GamePlatformType)Enum.Parse(typeof(GamePlatformType), item.Value),
                    IsSelected = isSelected
                });
            }

            Model.Note = text;

            var result = await Http.PostAsJsonAsync<EditAddInforViewModel>(ToolHelper.WebApiPath + "api/entries/editaddinfor", Model);
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("保存词条附加信息失败", obj.Error);
            }
            else
            {
                await ToastService.Success("保存成功", "保存词条附加信息成功，等待审核通过");
                NavigationManager.NavigateTo("/entries/index/" + Model.Id);
            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "保存词条附加信息失败");
        }
    }


}
