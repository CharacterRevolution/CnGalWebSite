
@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject NavigationManager NavigationManager


<TitleTip Title="创建词条"></TitleTip>

<CnGalWebSite.Shared.AppComponent.Pages.Account.HeadBar Title="创建词条" />

<link rel="stylesheet" href="https://app.cngal.org/_content/BootstrapBlazor.Markdown/css/bootstrap.blazor.markdown.min.css" media="none" onload="this.media='all'" />

<div style=" margin-top: 45px; width: 100%;margin-bottom:65px;">
    <ValidateForm Model="@Model" ValidateAllProperties="true" @ref="ComplexForm">
        <div class="ps-3 pe-3 pt-2 mb-3">

            <CnGalWebSite.Shared.AppComponent.Normal.Titles.TitleLine Title="填写主要信息" />

            <div class="row">
                <div class=" col-12 col-md-6  col-lg-3 mt-2">
                    <ImageCropperButton ImagePath="@MainImagePath" OnUploadedImage="OnCardUploadMain" EntryType_="Model.Type" IsMainImage="true"
                                        IsMustCropper="true" Text="上传主图"></ImageCropperButton>
                </div>
                <div class=" col-12 col-md-6  col-lg-3 mt-2">
                    <ImageCropperButton ImagePath="@ThuImagePath" OnUploadedImage="OnCardUploadThu" Type="ImageAspectType._1_1" Text="上传缩略图"></ImageCropperButton>
                </div>
                <div class=" col-12 col-md-6  col-lg-3 mt-2">
                    <ImageCropperButton ImagePath="@BackImagePath" OnUploadedImage="OnCardUploadBack" Type="ImageAspectType.None" Text="上传大背景"></ImageCropperButton>
                </div>
                <div class=" col-12 col-md-6  col-lg-3 mt-2">
                    <ImageCropperButton ImagePath="@SmallBackImagePath" OnUploadedImage="OnCardUploadSmall" Type="ImageAspectType.None" Text="上传小背景"></ImageCropperButton>
                </div>

            </div>

            <div class="form-group mt-4">
                <div class="row">
                    <div class="form-group col-12  col-sm-6">
                        <Select @bind-Value="Model.Type"></Select>
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.Name" />
                    </div>

                    <div class="form-group col-12">
                        <AlertTip Type="AlertTip.AlertTipType.CreateDisambig"></AlertTip>
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.DisplayName" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.AnotherName" />
                    </div>

                    <div class="form-group col-12">
                        <BootstrapInput @bind-Value="Model.BriefIntroduction" />
                    </div>
                </div>
            </div>


        </div>
    </ValidateForm>
    <div class="ps-3 pe-3 pt-2 mb-3">
        <CnGalWebSite.Shared.AppComponent.Normal.Titles.TitleLine Title="填写基本信息" />


        @switch (Model.Type)
        {
            case EntryType.Game:
                <div class="row">
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.SteamId" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <DateTimePicker @bind-Value="@Model.IssueTime" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="@Model.IssueTimeString" ShowLabel="true" />
                    </div>

                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.Original" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <AutoComplete Items="@EntryGroupItems" IsLikeMatch="true" IgnoreCase="true" @bind-Value="Model.ProductionGroup" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.Engine" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.Publisher" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.IssueMethod" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.OfficialWebsite" ShowLabel="true" />
                    </div>

                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.QQgroupGame" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12">
                        <CheckboxList @bind-Value="@GamePlatformsValue" ShowBorder="true" Items="@GamePlatforms" DisplayText="游戏平台" ShowLabel="true"></CheckboxList>
                    </div>
                    <div class="col-12 p-3">
                        <Divider></Divider>
                    </div>
                </div>

                <CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListStaff Staffs="Model.InforStaffs" @ref="staffEditor"></CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListStaff>

                break;
            case EntryType.ProductionGroup:
                <ValidateForm Model="@Model" ValidateAllProperties="true">
                    <div class="row">
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.QQgroupGroup" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.WeiboId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.BilibiliId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.AcFunId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.ZhihuId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.AfdianId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.PixivId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.TwitterId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.YouTubeId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.FacebookId" />
                        </div>
                    </div>
                </ValidateForm>

                break;
            case EntryType.Role:
                <div class="row">
                    <div class="form-group col-12  col-sm-6">
                        <AutoComplete Items="@EntryStaffItems" IsLikeMatch="true" IgnoreCase="true" @bind-Value="Model.CV" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <Select @bind-Value="Model.Gender" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.FigureData" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.FigureSubjective" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <DateTimePicker @bind-Value="@Model.Birthday" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.Haircolor" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.Pupilcolor" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.ClothesAccessories" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.Character" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.RoleIdentity" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.BloodType" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.RoleHeight" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.RoleTaste" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.RoleAge" ShowLabel="true" />
                    </div>
                </div>

                break;
            case EntryType.Staff:
                <ValidateForm Model="@Model" ValidateAllProperties="true">
                    <div class="row">
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.WeiboId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.BilibiliId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.AcFunId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.ZhihuId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.AfdianId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.PixivId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.TwitterId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.YouTubeId" />
                        </div>
                        <div class="form-group col-12  col-sm-6">
                            <BootstrapInput @bind-Value="Model.FacebookId" />
                        </div>
                    </div>
                </ValidateForm>
                break;
        }

        <CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListSocialPlatform Model="Model.SocialPlatforms" Title="相关网站"></CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListSocialPlatform>
    </div>
    <div class="ps-3 pe-3 pt-2 mb-3">

        <CnGalWebSite.Shared.AppComponent.Normal.Titles.TitleLine Title="添加词条标签" />

        <CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListTag AutoCompleteItems="@TagItems" Model="Model.Tags"></CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListTag>
    </div>
    <div class="ps-3 pe-3 pt-2 mb-3">
        <CnGalWebSite.Shared.AppComponent.Pages.Tags.Normal.SearchTags />
    </div>
    <div class="ps-3 pe-3 pt-2 mb-3">
        <CnGalWebSite.Shared.AppComponent.Normal.Titles.TitleLine Title="编辑相册" />
        <div class="mt-4">
            <CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListImage Images="Model.Images" @ref="ImagesListEditorView"></CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListImage>

        </div>
    </div>
    <div class="ps-3 pe-3 pt-2 mb-3">

        <CnGalWebSite.Shared.AppComponent.Normal.Titles.TitleLine Title="添加关联信息" />
        <div class="mt-3">
            <CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString AutoCompleteItems="@EntryRoleItems" Model="Model.Roles" Title="角色" />

        </div>


        @if (Model.Type != EntryType.Game)
        {
            <div class="mt-3">
                <CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString AutoCompleteItems="@EntryStaffItems" Model="Model.ReStaffs" Title="STAFF"></CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString>

            </div>
        }
        <div class="mt-3">
            <CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString AutoCompleteItems="@ArticleItems" Model="Model.News" Title="动态"></CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString>

        </div>
        <div class="mt-3">
            <CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString AutoCompleteItems="@ArticleItems" Model="Model.articles" Title="文章"></CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString>

        </div>
        <div class="mt-3">
            <CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString AutoCompleteItems="@EntryGameItems" Model="Model.Games" Title="游戏"></CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString>

        </div>
        <div class="mt-3">
            <CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString AutoCompleteItems="@EntryGroupItems" Model="Model.Groups" Title="制作组"></CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListString>

        </div>
        <div class="mt-3">
            <CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListOtherLink Model="Model.Others" Title="自定义链接"></CnGalWebSite.Shared.AppComponent.Normal.Lists.InputListOtherLink>

        </div>
    </div>
    <div class="ps-3 pe-3 pt-2 mb-3">
        <CnGalWebSite.Shared.AppComponent.Normal.Titles.TitleLine Title="编辑正文" />
        <div class="mt-3">
            @if (isReady == true)
            {
                <MarkdownEditorTip @ref="markdownEditorTip"></MarkdownEditorTip>
            }

        </div>


    </div>
</div>

<CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.EditFooter OnSubmit="OnSubmit" />

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string Name { get; set; }

    private EstablishEntryViewModel Model { get; set; } = new EstablishEntryViewModel();

    private string MainImagePath { get; set; } = "_content/CnGalWebSite.Shared/images/default/app.png";
    private string ThuImagePath { get; set; } = "_content/CnGalWebSite.Shared/images/default/app.png";
    private string BackImagePath { get; set; } = "_content/CnGalWebSite.Shared/images/default/app.png";
    private string SmallBackImagePath { get; set; } = "_content/CnGalWebSite.Shared/images/default/app.png";

    [Display(Name = "游戏平台")]
    private List<SelectedItem> GamePlatforms { get; set; } = new List<SelectedItem> {
        new SelectedItem{Text=GamePlatformType.Android.ToString(),Value=GamePlatformType.Android.ToString()},
        new SelectedItem{Text=GamePlatformType.DOS.ToString(),Value=GamePlatformType.DOS.ToString()},
        new SelectedItem{Text=GamePlatformType.IOS.ToString(),Value=GamePlatformType.IOS.ToString()},
        new SelectedItem{Text=GamePlatformType.Linux.ToString(),Value=GamePlatformType.Linux.ToString()},
        new SelectedItem{Text=GamePlatformType.Mac.ToString(),Value=GamePlatformType.Mac.ToString()},
        new SelectedItem{Text=GamePlatformType.NS.ToString(),Value=GamePlatformType.NS.ToString()},
        new SelectedItem{Text=GamePlatformType.PS.ToString(),Value=GamePlatformType.PS.ToString()},
        new SelectedItem{Text=GamePlatformType.Windows.ToString(),Value=GamePlatformType.Windows.ToString()},
        new SelectedItem{Text=GamePlatformType.HarmonyOS.ToString(),Value=GamePlatformType.HarmonyOS.ToString()},
        };
    [Display(Name = "游戏平台")]
    private List<string> GamePlatformsValue { get; set; } = new List<string>();
    private List<UploadFile> DefaultFormatFileListImages { get; set; } = new List<UploadFile>();
    public List<ImagesUploadAloneModel> images { get; set; } = new List<ImagesUploadAloneModel>();
    private List<UploadFile> DefaultFormatFileListMain { get; set; } = new List<UploadFile>();
    [NotNull]
    private ValidateForm? ComplexForm { get; set; }
    public DataModel.Model.Tag TagList = new DataModel.Model.Tag()
    {
        InverseParentCodeNavigation = new List<DataModel.Model.Tag>()
    };
    string SearchString { get; set; } = "";
    private List<string> Items = new List<string>();
    private List<string> SearchResult = new List<string>();
    string TagString = "";

    private bool isReady = true;
    [NotNull]
    private MarkdownEditorTip? markdownEditorTip;
    [NotNull]
    private CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListStaff? staffEditor { get; set; }
    [NotNull]
    private CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListImage? ImagesListEditorView;
    private IEnumerable<string> EntryGameItems { get; set; } = new string[1] { "" };
    private IEnumerable<string> EntryRoleItems { get; set; } = new string[1] { "" };
    private IEnumerable<string> EntryGroupItems { get; set; } = new string[1] { "" };
    private IEnumerable<string> EntryStaffItems { get; set; } = new string[1] { "" };
    private IEnumerable<string> ArticleItems { get; set; } = new string[1] { "" };
    private IEnumerable<string> TagItems { get; set; } = new string[1] { "" };

    public ImageCropperButton MainImageButton;

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Model.Name = Model.DisplayName = Name;
            //获取所有词条
            EntryGameItems = await Http.GetFromJsonAsync<List<string>>(ToolHelper.WebApiPath + "api/entries/GetAllEntries/0");
            EntryRoleItems = await Http.GetFromJsonAsync<List<string>>(ToolHelper.WebApiPath + "api/entries/GetAllEntries/1");
            EntryGroupItems = await Http.GetFromJsonAsync<List<string>>(ToolHelper.WebApiPath + "api/entries/GetAllEntries/2");
            EntryStaffItems = await Http.GetFromJsonAsync<List<string>>(ToolHelper.WebApiPath + "api/entries/GetAllEntries/3");
            //获取所有文章
            ArticleItems = await Http.GetFromJsonAsync<List<string>>(ToolHelper.WebApiPath + "api/articles/GetAllArticles");
            //获取所有标签
            TagItems = await Http.GetFromJsonAsync<List<string>>(ToolHelper.WebApiPath + "api/tags/GetAllTags");

        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取所有词条、文章、标签的名称列表失败");
        }
    }
    private async Task OnSubmit(string text)
    {
        try
        {
            //复制数据
            Model.Images = ImagesListEditorView.Images;
            Model.Context = await markdownEditorTip.GetContext();
            //调整时间
            if (Model.IssueTime != null)
            {
                Model.IssueTime = Model.IssueTime.Value.AddHours(Model.IssueTime.Value.Hour < 12 ? (12 - Model.IssueTime.Value.Hour) : 0);
            }
            if (Model.Birthday != null)
            {
                Model.Birthday = Model.Birthday.Value.AddHours(Model.Birthday.Value.Hour < 12 ? (12 - Model.Birthday.Value.Hour) : 0);
            }
            //处理数据
            if (string.IsNullOrWhiteSpace(Model.Name) || string.IsNullOrWhiteSpace(Model.DisplayName))
            {
                await ToastService.Error("创建词条失败", "请填写所有必填项目");
                return;
            }

            //检查图片链接 是否包含外链
            foreach (var item in Model.Images)
            {
                if (item.Url.Contains("image.cngal.org") == false && item.Url.Contains("pic.cngal.top") == false)
                {
                    await ToastService.Error("相册中不能添加外部图片", item.Url);
                }
            }
            //处理游戏平台数据
            Model.GamePlatforms = new List<GamePlatformModel>();
            foreach (var item in GamePlatforms)
            {
                bool isSelected = false;
                foreach (var infor in GamePlatformsValue)
                {
                    if (infor == item.Value)
                    {
                        isSelected = true;
                    }
                }
                Model.GamePlatforms.Add(new GamePlatformModel
                {
                    GamePlatformType = (GamePlatformType)Enum.Parse(typeof(GamePlatformType), item.Value),
                    IsSelected = isSelected
                });
            }
            //检查文本长度
            if (Model.Context != null && Model.Context.Length > 100000)
            {
                await ToastService.Error("文本长度超过上限", "强烈建议使用链接显示图片，内嵌图片会导致性能严重下降。请控制文本量，额外的文字可以移动到关联文章中");
                return;
            }
            //复制staff
            if (staffEditor != null)
            {
                Model.InforStaffs = staffEditor.Staffs;
            }

            Model.Note = text;

            var result = await Http.PostAsJsonAsync<EstablishEntryViewModel>(ToolHelper.WebApiPath + "api/entries/EstablishEntry", Model);
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {
                if (obj.Error == "该词条的名称与其他词条重复")
                {
                    ComplexForm.SetError<EstablishEntryViewModel>(f => f.Name, "已经存在该名称的词条");
                }
                await ToastService.Error("创建词条失败", obj.Error);
            }
            else
            {
                await ToastService.Success("创建词条成功", "创建词条成功，等待审核通过");
                NavigationManager.NavigateTo("/entries/index/" + obj.Error);
            }
        }
        catch(Exception ex)
        {
            ErrorHandler.ProcessError(ex, "创建词条失败");
        }
    }

    private Task OnCardUploadMain(string url)
    {
        MainImagePath = url;
        Model.MainPicture = url;
        return Task.CompletedTask;
    }
    private Task OnCardUploadThu(string url)
    {
        ThuImagePath = url;
        Model.Thumbnail = url;
        return Task.CompletedTask;
    }
    private Task OnCardUploadBack(string url)
    {
        BackImagePath = url;
        Model.BackgroundPicture = url;
        return Task.CompletedTask;
    }
    private Task OnCardUploadSmall(string url)
    {
        SmallBackImagePath = url;
        Model.SmallBackgroundPicture = url;
        return Task.CompletedTask;
    }


    public Task OnChangeEntryType()
    {
        switch (Model.Type)
        {
            case EntryType.Game:
                MainImageButton.Type = ImageAspectType._16_9;
                break;
            case EntryType.ProductionGroup:
                MainImageButton.Type = ImageAspectType._16_9;
                break;
            case EntryType.Role:
                MainImageButton.Type = ImageAspectType.None;
                break;
            case EntryType.Staff:
                MainImageButton.Type = ImageAspectType.None;
                break;
        }
        StateHasChanged();
        return Task.CompletedTask;
    }
}
