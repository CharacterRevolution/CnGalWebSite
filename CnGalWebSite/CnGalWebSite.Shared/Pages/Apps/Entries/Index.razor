@inject HttpClient Http
@inject ExamineService _examineService
@inject ToastService ToastService
@inject NavigationManager NavigationManager
@inject IAppHelper _appHelper
@inject IJSRuntime JS
@inject DialogService DialogService
@inject IDataCacheService _dataCatcheService

@if (string.IsNullOrWhiteSpace(Model.Name) == false)
{
    <TitleTip Title="@(Model.Name)" Description="@Model.BriefIntroduction" Image="@Model.MainPicture"></TitleTip>
}
else
{
    <TitleTip></TitleTip>
}
@if (string.IsNullOrWhiteSpace(Model.SmallBackgroundPicture) == false)
{
    <div id="web_bg" style="background-image: url(@Model.SmallBackgroundPicture)" class="d-none  bg-d-lg-block bgimage-ison "></div>
}



<CnGalWebSite.Shared.AppComponent.Pages.Entries.Normal.HeadBar Title="@Model.Name"
                                                               OnEdit="@(() => NavigationManager.NavigateTo("/entries/edit/home/" + Model.Id))" />
<div style="margin-top: 45px; width: 100%;margin-bottom:65px; " @onclick="@(() => entryFooter.UnRelyComment())">
    @if (isReady)
    {
        if (isNotFound)
        {
            <CnGalWebSite.Shared.AppComponent.Normal.Errors.NotFountCard EntryName="@Id" Type="未找到词条" />
        }
        else
        {
            <div>
                @if (Model.Type == EntryType.Game)
                {
                    <CnGalWebSite.Shared.AppComponent.Pages.Entries.Game.Index Model="Model" />
                }
                else if (Model.Type == EntryType.Role)
                {
                    <CnGalWebSite.Shared.AppComponent.Pages.Entries.Roles.Index Model="Model" />
                }
                else if (Model.Type == EntryType.Staff)
                {
                    <CnGalWebSite.Shared.AppComponent.Pages.Entries.Staff.Index Model="Model" />
                }
                else if (Model.Type == EntryType.ProductionGroup)
                {
                    <CnGalWebSite.Shared.AppComponent.Pages.Entries.Groups.Index Model="Model" />
                }
                <div class="ms-3 me-3 mt-4">
                    <CnGalWebSite.Shared.AppComponent.Normal.Comments.ListComment ObjectId="@Model.Id" Type="CommentType.CommentEntries" CanDeleted="IsAdmin" OnRelying="@((a)=>entryFooter.RelyComment(a.UserName,a.CommentId))" @ref="comments" />
                </div>
            </div>
        }
    }
    else
    {
        <CnGalWebSite.Shared.AppComponent.Normal.Loading.LoadingTip />
    }
</div>
@if (isNotFound == false && isReady == true)
{
    <CnGalWebSite.Shared.AppComponent.Pages.Entries.Normal.EntryFooter @ref="entryFooter" Image="@Model.MainPicture" RelyCallBack="RefreshComment"
                                                                       EntryId="@Model.Id" EntryName="@Model.Name" BriefIntroduction="@Model.BriefIntroduction" />
}

@code {

    private string id = "";
    [Parameter]
    public string Id
    {
        get
        {
            return id;
        }
        set
        {
            id = value;
            isReady = false;
            if (isFirstLoad == false)
            {
                OnReLoad();
            }
        }
    }

    private int defaultIndex { get; set; } = 0;
    [Parameter]
    public string DefaultIndex
    {
        get
        {
            return defaultIndex.ToString();
        }
        set
        {
            try
            {
                defaultIndex = int.Parse(value);
            }
            catch
            {
                defaultIndex = 0;
            }
        }
    }

    bool isReady = false;
    bool isNotFound = false;
    bool isFirstLoad = true;
    string LastLookName = "";

    public EntryIndexViewModel Model { get; set; } = new EntryIndexViewModel();

    public CnGalWebSite.Shared.AppComponent.Pages.Entries.Normal.EntryFooter entryFooter;
    public CnGalWebSite.Shared.AppComponent.Normal.Comments.ListComment comments;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public bool IsAdmin { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {

            isFirstLoad = false;
        }

    }

    async Task OnReLoad()
    {
        await OnInitializedAsync();
        await OnAfterRenderAsync_();
    }

    public async Task RefreshComment()
    {
        if (comments != null)
        {
            await comments.Refresh();

        }
    }

    async Task OnAfterRenderAsync_()
    {

        //记录数据
        if (Model.Name != LastLookName && string.IsNullOrWhiteSpace(Model.Name) == false)
        {
            LastLookName = Model.Name;
            try
            {
                await JS.InvokeAsync<string>("trackEvent", "词条", "浏览", Model.Name, "1", "look");
            }
            catch (Exception exc)
            {

            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var user = await authenticationStateTask;
            IsAdmin = user.User.IsInRole("Editor");

            isReady = false;
            isNotFound = true;
            //获取词条信息
            Model = await _dataCatcheService.EntryIndexPageCatche.GetCatche(Id);

            //判断如果名称为空则返回主页
            if (string.IsNullOrWhiteSpace(Model.Name))
            {
                NavigationManager.NavigateTo("/home");
            }

            isReady = true;
            isNotFound = false;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            isNotFound = true;
            isReady = true;
            StateHasChanged();
        }

    }
}
