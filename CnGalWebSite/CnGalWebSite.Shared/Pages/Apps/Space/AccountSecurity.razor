@page "/space/AccountSecurity/{Id}"

@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService


<TitleTip Title="设置"></TitleTip>



<CnGalWebSite.Shared.AppComponent.Pages.Account.HeadBar Title="设置" />
<div style=" margin-top: 45px; width: 100%;margin-bottom:65px;">
    @if (isReady)
    {
        <div class="ms-3 me-3 pt-2">
            <CnGalWebSite.Shared.AppComponent.Normal.Links.ListIconText Model="Model" ClassName="mb-4" />
        </div>
    }
    else
    {
        <CnGalWebSite.Shared.AppComponent.Normal.Loading.LoadingTip />
    }

</div>

@code {
    private List<AppComponent.Normal.Links.IconTextModel> Model = new List<AppComponent.Normal.Links.IconTextModel>();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    [Parameter]
    public string Id { get; set; }

    bool isReady = false;

    protected override async Task OnInitializedAsync()
    {
        EditUserDataViewModel model = null;
        try
        {
            model = await Http.GetFromJsonAsync<EditUserDataViewModel>(ToolHelper.WebApiPath + "api/space/edituserdata/");
        }
        catch
        {
            await ToastService.Error("无法连接到服务器", "请确保网络正常后联系开发人员");
            return;
        }

        Model.AddRange(new List<AppComponent.Normal.Links.IconTextModel>
    {
            new AppComponent.Normal.Links.IconTextModel
            {
                Text="修改密码",
                Url="/account/ChangePassword/" + ToolHelper.Base64EncodeUrl(NavigationManager.Uri)
            },
            new AppComponent.Normal.Links.IconTextModel
            {
                Text="修改绑定邮箱："+model.Email,
                Url="/account/ChangeEmail/" + ToolHelper.Base64EncodeUrl(NavigationManager.Uri)
            },
             new AppComponent.Normal.Links.IconTextModel
            {
                Text=string.IsNullOrWhiteSpace(model.Phone)?"绑定手机": ("修改绑定手机："+model.Phone),
                Url=string.IsNullOrWhiteSpace(model.Phone)?("/account/AddPhoneNumber/"):("/account/ChangePhoneNumber/")
            },
             new AppComponent.Normal.Links.IconTextModel
            {
                Text=string.IsNullOrWhiteSpace(model.GiteeAccountName)?"绑定Gitee": ("修改绑定Gitee："+model.GiteeAccountName),
                Url=ToolHelper.GetThirdPartyLoginUrl("", ThirdPartyLoginType.Gitee)
            },
             new AppComponent.Normal.Links.IconTextModel
            {
                Text=string.IsNullOrWhiteSpace(model.QQAccountName)?"绑定QQ": ("修改绑定QQ："+model.QQAccountName),
                Url=ToolHelper.GetThirdPartyLoginUrl("", ThirdPartyLoginType.QQ)
            }
        });

        isReady = true;
        StateHasChanged();
    }
}
