@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject NavigationManager NavigationManager

<TitleTip></TitleTip>

<link rel="stylesheet" href="https://static.cngal.top/_content/BootstrapBlazor.Markdown/css/bootstrap.blazor.markdown.min.css" media="none" onload="this.media='all'" />
<CnGalWebSite.Shared.AppComponent.Pages.Account.HeadBar />

<div style=" margin-top: 45px; width: 100%;margin-bottom:65px;">

    @if (isReady == false)
    {
        <CnGalWebSite.Shared.AppComponent.Normal.Loading.LoadingTip />
    }
    else
    {
        <div class="ps-3 pe-3 pt-2 mb-3">
            <CnGalWebSite.Shared.AppComponent.Normal.Titles.TitleLine Title="编辑主要信息" />

            <MarkdownEditorTip Context="@Model.MainPage" @ref="markdownEditorTip"></MarkdownEditorTip>
        </div>
    }

</div>
<CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.EditFooter OnSubmit="OnSubmit" />


@code {
        [Parameter]
        public string Id { get; set; }
    public EditUserMainPageViewModel Model { get; set; }
    bool isReady = false;

    [NotNull]
    private MarkdownEditorTip? markdownEditorTip;
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Model = await Http.GetFromJsonAsync<EditUserMainPageViewModel>(ToolHelper.WebApiPath + "api/space/editmainpage");
            isReady = true;
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取编辑用户主页失败");
        }
    }

    private async Task OnSubmit()
    {
        //上传
        try
        {
            Model.MainPage = await markdownEditorTip.GetContext();
            if (string.IsNullOrWhiteSpace(Model.MainPage))
            {
                Model.MainPage = "";
            }

            //检查文本长度
            if (Model.MainPage.Length > 100000)
            {
                await ToastService.Error("文本长度超过上限", "强烈建议使用链接显示图片，内嵌图片会导致性能严重下降。请控制文本量，额外的文字可以移动到关联文章中");
                return;
            }
            var result = await Http.PostAsJsonAsync<EditUserMainPageViewModel>(ToolHelper.WebApiPath + "api/space/editmainpage", Model);
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("保存用户主页失败", obj.Error);
            }
            else
            {
                await ToastService.Success("保存成功", "保存用户主页成功，等待审核通过");
                NavigationManager.NavigateTo("/space/index/" + Model.Id);
            }
        }
        catch(Exception ex)
        {
            ErrorHandler.ProcessError(ex, "保存用户主页失败");
        }
    }
}
