@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService


<TitleTip Title="打折中的游戏" Description="Steam游戏折扣专题页，可以按价格，发行时间，好评率等排序"></TitleTip>

<CnGalWebSite.Shared.AppComponent.Pages.Home.Steam.HeadBar Title="打折中的游戏" OrderType="_dataCacheService.DiscountPageCatcheHelper.OrderType"
                                                           OrderTypeChanged="OrderTypeChanged"
                                                           ScreenType="_dataCacheService.DiscountPageCatcheHelper.ScreenType"
                                                           ScreenTypeChanged="ScreenTypeChanged" />
<div>
        @if (isReady)
        {
            <div>
                @foreach (var item in _dataCacheService.DiscountPageCatcheHelper.Items)
                {
                    <div class="mb-3">
                        <CnGalWebSite.Shared.AppComponent.Pages.Home.Steam.SteamInforCard Model="item" />

                    </div>
                }


            </div>
            @if (_dataCacheService.DiscountPageCatcheHelper.Items.Count == 0)
            {
                <CnGalWebSite.Shared.AppComponent.Normal.Errors.NotFountCard Type="无数据" />
            }
        }
        else
        {
            <CnGalWebSite.Shared.AppComponent.Normal.Loading.LoadingTip />
        }
</div>


@code {
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }
    bool isReady = false;

    protected override async Task OnInitializedAsync()
    {

        try
        {
            if(_dataCacheService.DiscountPageCatcheHelper.IsInit==false)
            {
                _dataCacheService.DiscountPageCatcheHelper.Init(await Http.GetFromJsonAsync<List<SteamInforTipViewModel>>(ToolHelper.WebApiPath + "api/steam/GetAllDiscountSteamGame"));

            }
            isReady = true;
            StateHasChanged();

        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取Steam折扣游戏列表失败");
        }


    }

    public Task ScreenTypeChanged(ScreenSteamType type)
    {
        _dataCacheService.DiscountPageCatcheHelper.ScreenType = type;
        StateHasChanged();
        return Task.CompletedTask;
    }

    public Task OrderTypeChanged(SteamSortType type)
    {
        _dataCacheService.DiscountPageCatcheHelper.OrderType = type;
        StateHasChanged();

        return Task.CompletedTask;
    }

    public Task ThenOrderTypeChanged(SteamSortType type)
    {
        _dataCacheService.DiscountPageCatcheHelper.ThenOrderType = type;
        StateHasChanged();

        return Task.CompletedTask;
    }
}
