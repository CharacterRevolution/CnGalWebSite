@page "/home/themes/setbgmode"

@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService

@inject IJSRuntime JS

<TitleTip Title="设置背景模式"></TitleTip>


        <CnGalWebSite.Shared.AppComponent.Normal.Links.ListIconText Model="Model" ClassName="mb-4" />

@code {
    private List<AppComponent.Normal.Links.IconTextModel> Model = new List<AppComponent.Normal.Links.IconTextModel>();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
            Model.AddRange(new List<AppComponent.Normal.Links.IconTextModel>
{
                new AppComponent.Normal.Links.IconTextModel
                {
                    Text="透明",
                    OnClick = EventCallback.Factory.Create(this, async () => await SetDark(true)),
                },
                new AppComponent.Normal.Links.IconTextModel
                {
                    Text="不透明",
                    OnClick = EventCallback.Factory.Create(this, async () => await SetDark(false)),
                }
            });

    }
    public async void OnClickBack()
    {
        await JS.InvokeAsync<string>("goback");
    }

    public async Task SetDark(bool isOnBg)
    {
        _dataCacheService.ThemeSetting.IsOnBgImage = isOnBg;
        await _dataCacheService.SavaTheme.InvokeAsync();
        await ToastService.Success("设置背景模式成功", "成功设置" + (isOnBg ? "透明" : "不透明"));
        OnClickBack();
    }

}
