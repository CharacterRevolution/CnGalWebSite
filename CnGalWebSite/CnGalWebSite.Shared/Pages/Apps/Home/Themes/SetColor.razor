@page "/home/themes/setcolor"

@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService
@inject IJSRuntime JS


<TitleTip Title="设置主题颜色"></TitleTip>


        <CnGalWebSite.Shared.AppComponent.Normal.Links.ListIconText Model="Model" ClassName="mb-4" />

@code {
    private List<AppComponent.Normal.Links.IconTextModel> Model = new List<AppComponent.Normal.Links.IconTextModel>();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {

        Model.AddRange(new List<AppComponent.Normal.Links.IconTextModel>
{
                new AppComponent.Normal.Links.IconTextModel
                {
                    Text="天空蓝",
                    OnClick = EventCallback.Factory.Create(this, async () => await OnSetColor("color1")),
                },
                new AppComponent.Normal.Links.IconTextModel
                {
                    Text="草原绿",
                    OnClick = EventCallback.Factory.Create(this, async () => await OnSetColor("color2")),
                },
                 new AppComponent.Normal.Links.IconTextModel
                {
                    Text="CnGal粉",
                    OnClick = EventCallback.Factory.Create(this, async () => await OnSetColor("color3")),
                },
                  new AppComponent.Normal.Links.IconTextModel
                {
                    Text="金桔黄",
                    OnClick = EventCallback.Factory.Create(this, async () => await OnSetColor("color4")),
                },
                   new AppComponent.Normal.Links.IconTextModel
                {
                    Text="湛蓝绿",
                    OnClick = EventCallback.Factory.Create(this, async () => await OnSetColor("color5")),
                },
                   new AppComponent.Normal.Links.IconTextModel
                {
                    Text="基佬紫",
                    OnClick = EventCallback.Factory.Create(this, async () => await OnSetColor("color6")),
                },
            });

    }
    public async void OnClickBack()
    {
        await JS.InvokeAsync<string>("goback");
    }

    public async Task OnSetColor(string color)
    {
        _dataCacheService.ThemeSetting.Theme = color;
        await _dataCacheService.SavaTheme.InvokeAsync();
        await ToastService.Success("设置主题颜色成功", "设置主题颜色成功");
        OnClickBack();
    }

}
