
@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager


@if (string.IsNullOrWhiteSpace(Model.Name) == false)
{
    <TitleTip Title="@("编辑 " + Model.Name)"></TitleTip>
}
else
{
    <TitleTip></TitleTip>

}


<CnGalWebSite.Shared.AppComponent.Pages.Account.HeadBar Title="@Model.Name" />

<div style=" margin-top: 45px; width: 100%;margin-bottom:65px;">

    @if (isReady == false)
    {
        <CnGalWebSite.Shared.AppComponent.Normal.Loading.LoadingTip />
    }
    else
    {
        <div class="ps-3 pe-3 pt-2 mb-3">
            <CnGalWebSite.Shared.AppComponent.Normal.Titles.TitleLine Title="编辑相册" />
            <div class="mt-4">
                <CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListImage Images="Model.Images" @ref="ImagesListEditorView"/>

            </div>
        </div>
    }

</div>
<CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.EditFooter OnSubmit="OnSubmit" />

@code {

    [Parameter]
    public string Id { get; set; }

    private EditPeripheryImagesViewModel Model { get; set; } = new EditPeripheryImagesViewModel();

    private bool isReady = false;


    private CnGalWebSite.Shared.AppComponent.Pages.Entries.Edits.InputListImage ImagesListEditorView;

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            //获取所有词条
            Model = await Http.GetFromJsonAsync<EditPeripheryImagesViewModel>(ToolHelper.WebApiPath + "api/peripheries/editimages/" + Id);
            isReady = true;
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取编辑周边相册失败");
        }
    }

    private async Task OnSubmit()
    {
        try
        {
            //处理数据
            Model.Images = ImagesListEditorView.Images;

            var result = await Http.PostAsJsonAsync<EditPeripheryImagesViewModel>(ToolHelper.WebApiPath + "api/peripheries/editimages", Model);
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {

                await ToastService.Error("编辑周边相册失败", obj.Error);
            }
            else
            {
                await ToastService.Success("编辑周边相册成功", "编辑周边相册成功，等待审核通过");
                NavigationManager.NavigateTo(Provider, "/peripheries/index/" + Model.Id, Model.Name, "fa fa-newspaper-o");
            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "编辑周边相册失败");
        }
    }
}
