
@inject HttpClient Http
@inject ExamineService _examineService
@inject ToastService? ToastService
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject IDataCacheService _dataCatcheService

@if (string.IsNullOrWhiteSpace(Model.Name) == false)
{
    <TitleTip Title="@(Model.Name)" Description="@Model.BriefIntroduction" Image="@Model.MainPicture"></TitleTip>
}
else
{
    <TitleTip></TitleTip>
}
<CnGalWebSite.Shared.AppComponent.Pages.Entries.Normal.HeadBar Title="@Model.Name" OnEdit="@(() => NavigationManager.NavigateTo("/peripheries/edit/home/" + Model.Id))" CanEdit="true" ClassName="" />

<div style="margin-top: 45px; width: 100%;margin-bottom:65px; " @onclick="@(() => peripheryFooter.UnRelyComment())">
    @if (isReady == false)
    {
        <CnGalWebSite.Shared.AppComponent.Normal.Loading.LoadingTip />

    }
    else
    {
        @if (isNotFound)
        {
            <CnGalWebSite.Shared.AppComponent.Normal.Errors.NotFountCard EntryName="@Id" Type="未找到周边" />
        }
        else
        {
            <div>
                <CnGalWebSite.Shared.AppComponent.Pages.Peripheries.HeadCard Model="Model" />
                <div>
                    <CnGalWebSite.Shared.AppComponent.Pages.Peripheries.PivotLine IsShowImages="@(Model.Pictures.Count!=0)"
                                                                                  OnTabClick="OnTabClick" DefaultIndex="defaultIndex" RandomIndex="randomIndex" />
                    <div class="ms-3 me-3">
                        <div class="mt-3 mb-3" style="padding-right: 0;padding-left: 0;">
                            <div class="tab-content" id="@("pills" + randomIndex + "-tabContent")">
                                <div class="@("tab-pane fade" + (defaultIndex == 0 ? " show active " : "") )" id="@("pills" + randomIndex + "-0")" role="tabpanel" aria-labelledby="@("pills" + randomIndex + "-0-tab")">
                                    <CnGalWebSite.Shared.AppComponent.Pages.Peripheries.DetailCard Model="@Model" @ref="detailCard" />
                                </div>
                                <div class="@("tab-pane fade" + (defaultIndex == 1 ? " show active " : "") )" id="@("pills" + randomIndex + "-1")" role="tabpanel" aria-labelledby="@("pills" + randomIndex + "-1-tab")">
                                    <div class="mt-2">
                                        <CnGalWebSite.Shared.AppComponent.Pages.Peripheries.ImageCard Model="Model" TabIndex="TabIndexNum" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="ms-3 me-3 mt-4">
                    <CnGalWebSite.Shared.AppComponent.Normal.Comments.ListComment ObjectId="@Model.Id" Type="CommentType.CommentPeriphery" CanDeleted="IsAdmin" OnRelying="@((a)=>peripheryFooter.RelyComment(a.UserName,a.CommentId))" @ref="comments" />
                </div>
            </div>

        }

    }
</div>
@if (isNotFound == false && isReady == true)
{
    <CnGalWebSite.Shared.AppComponent.Pages.Peripheries.PeripheryFooter @ref="peripheryFooter" Image="@Model.MainPicture" RelyCallBack="RefreshComment" IsCollected="Model.IsCollected" CollectionChanged="OnCollectionChanged"
                                                                        PeripheryId="@Model.Id" PeripheryName="@Model.Name" BriefIntroduction="@Model.BriefIntroduction" />
}
@code {
    private string id = "";
    [Parameter]
    public string Id
    {
        get
        {
            return id;
        }
        set
        {
            id = value;
            isReady = false;
            if (isFirstLoad == false)
            {
                OnReLoad();
            }
        }
    }

    private int defaultIndex { get; set; } = 0;
    [Parameter]
    public string DefaultIndex
    {
        get
        {
            return defaultIndex.ToString();
        }
        set
        {
            try
            {
                defaultIndex = int.Parse(value);
            }
            catch
            {
                defaultIndex = 0;
            }
        }
    }

    bool isReady = false;
    bool isNotFound = false;
    bool isFirstLoad = true;
    public bool IsAdmin { get; set; }

    public PeripheryViewModel Model { get; set; } = new PeripheryViewModel();
    string LastLookName = "";
    public CnGalWebSite.Shared.AppComponent.Pages.Peripheries.PeripheryFooter peripheryFooter;
    public CnGalWebSite.Shared.AppComponent.Normal.Comments.ListComment comments;
    public CnGalWebSite.Shared.AppComponent.Pages.Peripheries.DetailCard detailCard;
    public int TabIndexNum = 0;
    public int randomIndex = new Random().Next();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public Task OnTabClick(int index)
    {

        TabIndexNum = index;
        return Task.CompletedTask;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {

            isFirstLoad = false;
        }

    }

    async Task OnReLoad()
    {
        await OnInitializedAsync();
        await OnAfterRenderAsync_();
    }
    public async Task RefreshComment()
    {
        if (comments != null)
        {
            await comments.Refresh();

        }
    }
    async Task OnAfterRenderAsync_()
    {

        //记录数据
        if (Model.Name != LastLookName && string.IsNullOrWhiteSpace(Model.Name))
        {
            LastLookName = Model.Name;
            try
            {
                await JS.InvokeAsync<string>("trackEvent", "周边", "浏览", Model.Name, "1", "look");
            }
            catch (Exception exc)
            {

            }
        }
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var user = await authenticationStateTask;
            IsAdmin = user.User.IsInRole("Editor");

            isReady = false;
            isNotFound = true;
            //获取周边信息
            Model = await _dataCatcheService.PeripheryIndexPageCatche.GetCatche(Id);

            //判断如果名称为空则返回主页
            if (string.IsNullOrWhiteSpace(Model.Name))
            {
                NavigationManager.NavigateTo("/home");
            }



            isReady = true;
            isNotFound = false;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            isNotFound = true;
            isReady = true;
            StateHasChanged();
        }
    }

    public async Task OnCollectionChanged(bool isCollected)
    {

        Model.IsCollected = isCollected;
        if (isCollected)
        {
            await detailCard.listPeripheryOverviewCard.CollectionChanged(true, Model.Id);
            Model.CollectedCount++;
        }
        else
        {
            await detailCard.listPeripheryOverviewCard.CollectionChanged(false, Model.Id);
            Model.CollectedCount--;
        }
        StateHasChanged();
    }
}
