@page "/account/apps/githublogin/{*ParameterStr}"

@inject IDataCacheService _dataCacheService

@inject NavigationManager NavigationManager
@inject SwalService SwalService

<TitleTip></TitleTip>
<CnGalWebSite.Shared.AppComponent.Normal.Redirections.MakeAccountLayoutRight />
@if (_dataCacheService.IsApp == true)
{
    @if (isReady)
    {
        <CnGalWebSite.Shared.AppComponent.Pages.Account.UseThirdPartyToLogin Code="@Code" ReturnUrl="@ReturnUrl" Type="type"></CnGalWebSite.Shared.AppComponent.Pages.Account.UseThirdPartyToLogin>
    }
    else
    {
        <AccountWaitingTip Title="正在重定向" Subtitle="你正在使用第三方账户登入，我们正在检查以确保一切正常"></AccountWaitingTip>

    }

}


@code {
    [Parameter]
    public string ParameterStr { get; set; }

    bool isReady = false;

    public string Code { get; set; }
    public string ReturnUrl { get; set; }
    public ThirdPartyLoginType type { get; set; } = ThirdPartyLoginType.GitHub;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ParameterStr = NavigationManager.Uri;
            if (string.IsNullOrWhiteSpace(ParameterStr))
            {
                await SwalService.ShowModal(new SwalOption()
                {
                    IsConfirm = true,
                    Category = SwalCategory.Error,
                    Title = "第三方登入失败",
                    Content = "[Code:301] 回调链接不正确，请联系管理员"
                });
                NavigationManager.NavigateTo("/");
                return;
            }

            //查找参数
            Code = ToolHelper.MidStrEx(ParameterStr, "code=", "&");
            ReturnUrl = ParameterStr.Split("state=")[1];

            isReady = true;
            StateHasChanged();
        }

    }

}
