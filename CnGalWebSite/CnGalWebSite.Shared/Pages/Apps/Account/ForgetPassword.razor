@page "/account/apps/forgetpassword"

@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService


<TitleTip></TitleTip>
<CnGalWebSite.Shared.AppComponent.Normal.Redirections.MakeAccountLayoutRight />


@if (isReady == false)
{
    <CnGalWebSite.Shared.AppComponent.Pages.Account.HeadBar Title="请输入绑定的邮箱或手机号码" />
    <div class="p-3" style="margin-top:45px">
        <CnGalWebSite.Shared.AppComponent.Pages.Account.HeadCard />

        <div   class="form-group col-12 mt-4 ps-4 pe-4  mb-0">

            <div class="row">
                <div class="form-group col-12  col-sm-12">
                    <BootstrapInput @bind-Value="Model.Mail" DisplayText="绑定的邮箱或手机号码" ShowLabel="true"/>
                </div>
                <div class="form-group col-12">
                    <Button Color="Color.Dark"  IsAsync="true" style="width:100%" OnClick="GetEmail">确定</Button>
                </div>

            </div>
        </div>
    </div>

}
else
{
    @if (IsConfirmed == false)
    {
        @if (Model.Mail.Contains("@"))
        {
            <CnGalWebSite.Shared.AppComponent.Pages.Account.HeadBar Title="验证电子邮箱" />

        }
        else
        {
            <CnGalWebSite.Shared.AppComponent.Pages.Account.HeadBar Title="验证手机号码" />
        }

        <div class="p-3" style="margin-top:45px">
            @if (Model.Mail.Contains("@"))
            {
                <CnGalWebSite.Shared.AppComponent.Pages.Account.HeadCard Text="@("我们已经向 " +Model.Mail+" 发送了一封验证邮件，请在下方填写其中的验证码。如果没有在收件箱找到邮件，请检查垃圾箱。")" />
            }
            else
            {
                <CnGalWebSite.Shared.AppComponent.Pages.Account.HeadCard Text="@("我们已经向 " +Model.Mail+" 发送了一封验证短信，请在下方填写其中的验证码")" />
            }
            <div   class="form-group col-12 mt-4 ps-4 pe-4  mb-0">

                <div class="row">
                    <div class="form-group col">
                        <BootstrapInput @bind-Value="Model.NumToken" ShowLabel="true"/>
                    </div>
                    <div class="form-group col-auto" style=" display: flex; align-items: flex-end;">
                        <CnGalWebSite.Shared.AppComponent.Pages.Account.PostVerificationCode Email="@Model.Mail"></CnGalWebSite.Shared.AppComponent.Pages.Account.PostVerificationCode>
                    </div>
                    <div class="form-group col-12">
                        <Button Color="Color.Dark"  IsAsync="true" style="width:100%" OnClick="ConfirmNumToken">验证</Button>
                    </div>

                </div>
            </div>
        </div>

    }
    else
    {
<div class="p-3" style="margin-top:45px">

    <CnGalWebSite.Shared.AppComponent.Pages.Account.HeadBar Title="请输入新密码" />
    <CnGalWebSite.Shared.AppComponent.Pages.Account.HeadCard />

    <div  class="form-group col-12 mt-4 ps-4 pe-4 mb-0">

        <div class="row">

            <div class="form-group col-12  col-sm-12">
                <BootstrapInput @bind-Value="Model.Password" type="password" ShowLabel="true"/>
            </div>
            <div class="form-group col-12  col-sm-12">
                <BootstrapInput @bind-Value="Model.ConfirmPassword" type="password" ShowLabel="true"/>
            </div>
            <div class="form-group col-12">
                <Button Color="Color.Dark" IsAsync="true" style="width:100%" OnClick="ConfirmPassword">确定</Button>
            </div>

        </div>
    </div>
</div>

    }
}


@code {
    private ForgetPasswordModel Model = new ForgetPasswordModel();
    bool IsConfirmed = false;
    bool isReady = false;
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    private async Task GetEmail()
    {
        if (string.IsNullOrWhiteSpace(Model.Mail))
        {
            await ToastService.Error("请输入邮箱或手机号码", "请输入邮箱或手机号码");
            return;
        }
        try
        {
            var result = await Http.GetFromJsonAsync<Result>(ToolHelper.WebApiPath + "api/account/ForgetPassword/" + Model.Mail);
            if (result.Successful == true)
            {
                isReady = true;
                StateHasChanged();
            }
            else
            {
                await ToastService.Error("无法获取验证码", result.Error);

            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "无法获取验证码");
        }

    }


    private async Task ConfirmNumToken()
    {
        try
        {
            var result = await Http.PostAsJsonAsync<CheckVerificationCodeModel>(ToolHelper.WebApiPath + "api/account/CheckVerificationCode", new CheckVerificationCodeModel { Num = Model.NumToken });
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("验证码错误", obj.Error);
                return;
            }
            else
            {
                IsConfirmed = true;
                StateHasChanged();
            }
        }
        catch(Exception ex)
        {
            ErrorHandler.ProcessError(ex, "检查验证码失败");
        }
    }

    private async Task ConfirmPassword()
    {
        try
        {

            var result = await Http.PostAsJsonAsync<ForgetPasswordModel>(ToolHelper.WebApiPath + "api/account/ConfirmForgetPassword", Model);
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("修改密码失败", obj.Error);
                if (obj.Error == "验证码错误")
                {
                    IsConfirmed = false;
                    StateHasChanged();
                }
            }
            else
            {
                await ToastService.Success("修改密码成功", "修改密码成功，请登入");
                NavigationManager.NavigateTo("/account/apps/login");
            }
        }
        catch(Exception ex)
        {
            ErrorHandler.ProcessError(ex, "修改密码失败");
        }
    }

}
