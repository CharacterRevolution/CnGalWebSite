@page "/times"
@page "/gamepublishtimelist"

@inject HttpClient Http
@inject ToastService? ToastService
@inject IJSRuntime JS
@inject IDataCacheService _dataCacheService
@inject NavigationManager NavigationManager
<TitleTip Title="游戏发售时间汇总" Description="可以查看每月发售游戏列表"></TitleTip>

<style>
    .row {
        flex: 0;
    }
</style>
<div>
    @if (isReady == false)
    {
        <div class="  rounded shadow-sm  bg-opacity pt-3">

            <div class="row mt-2 ms-2 me-2" style="padding-right: 0;padding-left: 0;">
                <div class="col-12 col-md-12 col-lg-5 mt-1 mb-4">
                    <SkeletonAvatar Round="false" />
                </div>

                <div class="col-12 col-md-12 col-lg-6 mt-1 mb-2">
                    <SkeletonParagraph />
                </div>
            </div>
        </div>
        <div class="mt-3">
            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-3 pb-3">
                <SkeletonParagraph />

            </div>
        </div>


        <div class=" mt-3">
            <div class="  rounded shadow-sm  ps-4 pe-4 pt-3 pb-3 bg-opacity rounded">
                <SkeletonParagraph />
            </div>
        </div>
        <div class="mt-3" style="padding-right: 0;padding-left: 0;">
            <div class="  rounded shadow-sm  ps-4 pe-4 pt-3 pb-3 bg-opacity rounded">
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
            </div>
        </div>
    }
    else
    {
        <div class=" rounded shadow-sm ps-4 pe-4 mb-4 bg-opacity">
            <div style="display: flex;flex-direction: column;align-items: center;align-content: center;" class="pt-4">
                <div class="h4 fw-bold font-color">游戏发售时间汇总</div>
            </div>
            <div style="display: flex; align-items: center; justify-content: center;">
                <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaButton Text="上个月" Icon="mdi-arrow-left-thick" TextStyle OnClick="OnClickLeft"/>
                <div style="max-width:160px" class="ps-4 pe-4">
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaMonthPick Date="Date" DateChanged="DateChanged" />

                </div>
                <div style="max-width:100px;">
                    <MButton Text Block Color="@_dataCacheService.ThemeSetting.Theme" OnClick="OnClickRight">
                        下个月
                        <MIcon Right>mdi-arrow-right-thick</MIcon>
                    </MButton>
                </div>

            </div>
        </div>
        <div class="row">
            @foreach (var item in Model.OrderBy(s=>s.PublishTime))
            {
                <div class="mb-4">
                    <CnGalWebSite.Shared.Component.Search.NewVersion.EntryInforViewTip Model="item" ForcedShowPublishTime ShowType="false"/>
                </div>
            }


        </div>

        @if (Model.Count == 0)
        {
            <NotFoundTip IsNeedLayput="true" />
        }
    }
</div>

@code {
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    [SupplyParameterFromQuery]
    [Parameter]
    public int Year { get; set; }

    [SupplyParameterFromQuery]
    [Parameter]
    public int Month { get; set; }

    DateOnly Date = DateOnly.FromDateTime(DateTime.Now);

    List<EntryInforTipViewModel> Model = new List<EntryInforTipViewModel>();

    bool isReady = false;

    protected override async Task OnParametersSetAsync()
    {

        try
        {
            if (Year == 0 || Month == 0 || Month > 12)
            {
                await DateChanged(DateOnly.FromDateTime(DateTime.Now));

            }
            else
            {
                Date = new DateOnly(Year, Month, 1);
            }
            Model = await _dataCacheService.PublishGameTimesDataCatche.GetCache($"?year={Year}&month={Month}");

            isReady = true;

        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取游戏发售时间列表失败");
        }

    }


    protected override async Task OnInitializedAsync()
    {

    }

    public Task OnClickLeft()
    {
        DateChanged(Date.AddMonths(-1));
        return Task.CompletedTask;
    }
    public Task OnClickRight()
    {
        DateChanged(Date.AddMonths(1));
        return Task.CompletedTask;
    }

    public Task DateChanged(DateOnly date)
    {
        try
        {
            Date = date;
            Year = date.Year;
            Month = date.Month;
            NavigationManager.NavigateTo(NavigationManager.GetUriWithQueryParameters(new Dictionary<string, object>
            {
                ["year"] = date.Year,
                ["month"] = date.Month
            }));

        }
        catch
        {

        }

        return Task.CompletedTask;
    }
}
