@page "/home/editrecord"


@inject HttpClient Http
@inject ExamineService _examineService
@inject ToastService ToastService
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager
@inject IAppHelper _appHelper
@inject IJSRuntime JS
@inject IDataCacheService _dataCatcheService

@inject DialogService DialogService


@if (isReady)
{
    <TitleTip Title="@("『"+ExaminesOverview.ObjectName+"』第" +ContrastId+"次编辑记录")" Description="@ExaminesOverview.ObjectBriefIntroduction" Image="@ExaminesOverview.Image"></TitleTip>
}

@if (isReady)
{
    <CnGalWebSite.Shared.Component.Home.EditRecords.OverviewCard Model="ExaminesOverview" />
}
else
{
    <div>
        <div class="rounded shadow-sm  bg-opacity pt-3">

            <div class="row mt-2 ms-2 me-2" >
                <div class="col-12 col-md-12 col-lg-5 mt-1 mb-4">
                    <SkeletonAvatar Round="false" />
                </div>

                <div class="col-12 col-md-12 col-lg-6 mt-1 mb-2">
                    <SkeletonParagraph />
                </div>
            </div>
        </div>
        <div class="mt-3">
            <div class="rounded shadow-sm bg-opacity rounded ps-4 pe-4 pt-3 pb-3">
                <SkeletonParagraph />

            </div>
        </div>


        <div class=" mt-3">
            <div class="rounded shadow-sm ps-4 pe-4 pt-3 pb-3 bg-opacity rounded">
                <SkeletonParagraph />
            </div>
        </div>
        <div class="mt-3">
            <div class="rounded shadow-sm ps-4 pe-4 pt-3 pb-3 bg-opacity rounded">
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
            </div>
        </div>
    </div>
}


@code {
    private long contrastId;
    [SupplyParameterFromQuery]
    [Parameter]
    public long ContrastId
    {
        get
        {
            return contrastId;
        }
        set
        {
            contrastId = value;
            if (isFirstLoad == false)
            {
                OnReLoad();
            }
        }
    }
    private long currentId;

    [SupplyParameterFromQuery]
    [Parameter]
    public long CurrentId
    {
        get
        {
            return currentId;
        }
        set
        {
            try
            {
                currentId = currentId;
            }
            catch
            {
                currentId = 0;
            }
        }
    }
    bool isFirstLoad = true;
    bool isReady = false;

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    public ExaminesOverviewViewModel ExaminesOverview { get; set; } = new ExaminesOverviewViewModel();

    async Task OnReLoad()
    {
        await OnInitializedAsync();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {

            isFirstLoad = false;
        }

    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            //获取词条信息
            ExaminesOverview = await Http.GetFromJsonAsync<ExaminesOverviewViewModel>(ToolHelper.WebApiPath + "api/admin/GetEditRecordsOverview/" + contrastId);

            isReady = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取编辑记录概览失败");
        }
    }
}
