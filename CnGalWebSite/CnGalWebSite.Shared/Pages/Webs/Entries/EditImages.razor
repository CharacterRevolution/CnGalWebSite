@inject HttpClient Http
@inject ExamineService _examineService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IAppHelper _appHelper
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager


@if (string.IsNullOrWhiteSpace(Model.Name) == false)
{
    <TitleTip Title="@("编辑 " + Model.Name)"></TitleTip>
}
else
{
    <TitleTip></TitleTip>

}


<MakeSureInWASMTip></MakeSureInWASMTip>

<div class="">
    <div class="" style="padding-right: 0;padding-left: 0;">
        <AlertTip Type="AlertTip.AlertTipType.Reward"></AlertTip>
        <AlertTip Type="AlertTip.AlertTipType.EntryStandard"></AlertTip>
        <div class="alert alert-warning  rounded shadow-sm  rounded" role="alert">
            可以在这里上传游戏的宣传图，不涉及<strong>剧透、侵权、违法</strong>的游戏CG和角色立绘等图片
        </div>
        @if (Model.Type == EntryType.Staff)
        {
            <div class="alert alert-danger  rounded shadow-sm  rounded" role="alert">
                这个词条可能涉及到现实人物，请勿过分较真，也请谨慎编辑，仔细斟酌词句
            </div>
        }
        else
        {

        }
        @if (isReady == false)
        {
            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4 mb-4">
                <h3 class="text-truncate mb-4 fw-bold">编辑图片</h3>
                <h5 class="mb-4 fw-bold">当前词条：（Id:）</h5>
                <hr>

                <div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                </div>
            </div>
        }
        else
        {
            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4 mb-3">
                <h3 class="text-truncate mb-4 fw-bold">编辑图片</h3>
                <h5 class="mb-4 fw-bold">当前词条：@Model.Name（Id:@Model.Id）</h5>
                <hr class="mb-4" />
                <ImagesListEditorViewTip Images="Model.Images" @ref="ImagesListEditorView"></ImagesListEditorViewTip>
            </div>
            <div class="rounded shadow-sm bg-opacity rounded ps-4 pe-4 pt-3 pb-3 mb-4">
                <div>
                    <ValidateForm Model="@Model">
                        <BootstrapBlazor.Components.Textarea @bind-Value="Model.Note" DisplayText="备注" />
                    </ValidateForm>
                    <Button class="mt-3" style="width: 100px" @onclick="@(() => OnSubmit())" IsAsync="true" Color="Color.Success" IsOutline="true" Icon="fa fa-check" Text="完成"></Button>
                </div>
            </div>
        }

    </div>
</div>


@code {
    [Parameter]
    public string Id { get; set; }
    public EditImagesViewModel Model { get; set; } = new EditImagesViewModel();
    bool isReady = false;
    [NotNull]
    private ImagesListEditorViewTip? ImagesListEditorView;

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    protected override async Task OnInitializedAsync()
    {
#if DEBUG
        // Thread.Sleep(10000);
#endif
        try
        {
            //获取词条信息
            Model = await Http.GetFromJsonAsync<EditImagesViewModel>(ToolHelper.WebApiPath + "api/entries/editimages/" + Id);

            isReady = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取编辑词条相册失败");
        }

    }

    private async Task OnSubmit()
    {
        try
        {
            //复制数据
            Model.Images = ImagesListEditorView.Images;

            var result = await Http.PostAsJsonAsync<EditImagesViewModel>(ToolHelper.WebApiPath + "api/entries/editimages", Model);
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("保存词条图片失败", obj.Error);
            }
            else
            {
                await ToastService.Success("保存成功", "保存词条图片成功，等待审核通过");
                NavigationManager.NavigateTo(Provider,"/entries/index/" + Model.Id, Model.Name, "fa fa-codepen");
            }
        }
        catch(Exception ex)
        {
            ErrorHandler.ProcessError(ex, "保存词条图片失败");
        }
    }
  
}
