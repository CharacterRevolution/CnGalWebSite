@inject HttpClient Http
@inject ExamineService _examineService
@inject ToastService? ToastService
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject IDataCacheService _dataCacheService

@inject DialogService DialogService

@if (string.IsNullOrWhiteSpace(Model.Name) == false)
{
    <TitleTip Title="@(Model.Name)" Description="@Model.BriefIntroduction" Image="@Model.MainPicture"></TitleTip>
}
else
{
    <TitleTip></TitleTip>
}

@if (_dataCacheService.ThemeSetting.IsTransparent)
{

    @if (string.IsNullOrWhiteSpace(Model.SmallBackgroundPicture) == false)
    {
        <div id="web_bg" style="background-image: url(@Model.SmallBackgroundPicture)" class=" d-none  bg-d-lg-block bgimage-ison"></div>
    }
    @if (string.IsNullOrWhiteSpace(Model.BackgroundPicture) == false)
    {
        <div id="web_bg" style="background-image: url(@Model.BackgroundPicture)" class=" d-none d-sm-block bgimage-ison"></div>
    }

}



@if (isNotFound == true)
{
    <NotFoundLottery IsNeedLayput="true"></NotFoundLottery>
}
else
{
<div>
    @if (isReady == false)
    {
        <div>
            <div class="  rounded shadow-sm  ps-4 pe-4 pt-3 pb-3 bg-opacity rounded">
                <SkeletonParagraph />
                <hr class="m-2" />
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
            </div>
        </div>
    }
    else
    {
        @if (Model.IsHidden == true)
        {
            <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Warning" Class="mb-3">
                当前抽奖处于隐藏状态，如果你看到了这个提示，请立即联系管理员
            </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>

        }

        @if (_dataCacheService.IsApp)
        {
            <div class="row">
                <div class="col-12 col-lg-9">

                    <CnGalWebSite.Shared.Component.Lotteries.MainPage.MainInforCard Model="Model" StateChanged="HiddenStateChanged" />

                    <CnGalWebSite.Shared.Component.Lotteries.MainPage.BasicInforCard Model="Model" />
                    <CnGalWebSite.Shared.Component.Lotteries.MainPage.OptionInforCard ViewModel="Model" />

                    <div class="rounded  shadow-sm bg-opacity mb-4">
                        <MTabs @bind-Value="TabIndex" IconsAndText Grow Class="rounded" CenterActive
                               Color="@_dataCacheService.ThemeSetting.Theme">
                            <MTab Value="1">
                                首页<MIcon>mdi-home</MIcon>
                            </MTab>
                            <MTab Value="2">
                                奖品<MIcon>mdi-wallet-giftcard </MIcon>
                            </MTab>
                            @if (Model.Awards.Any(s => s.Users.Any()))
                            {
                                <MTab Value="3">
                                    中奖用户<MIcon>mdi-calendar-range</MIcon>
                                </MTab>
                            }

                        </MTabs>
                    </div>
                    <MTabsItems @bind-Value="TabIndex">
                        <MTabItem Value="1">
                            <CnGalWebSite.Shared.Component.Lotteries.MainPage.MainPageCard Model="Model" />
                            <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="留言板" Icon="fa fa-fw fa-sticky-note-o" Outline>
                                <CnGalWebSite.Shared.MasaComponent.PC.Comments.CommentTip CanComment="Model.CanComment" CanDeleted="IsAdmin" ObjectId="@Model.Id.ToString()" Type="CommentType.CommentLottery" />
                            </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>
                        </MTabItem>
                        <MTabItem Value="2">
                            <CnGalWebSite.Shared.Component.Lotteries.MainPage.AwardListCard Model="Model.Awards" />

                        </MTabItem>
                        <MTabItem Value="3">
                            <CnGalWebSite.Shared.Component.Lotteries.MainPage.WinningUserListCard Model="Model.Awards" />
                        </MTabItem>
                    </MTabsItems>



                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-12 col-lg-9">

                    <CnGalWebSite.Shared.Component.Lotteries.MainPage.MainInforCard Model="Model" StateChanged="HiddenStateChanged" />
                    <CnGalWebSite.Shared.Component.Lotteries.MainPage.MainPageCard Model="Model" />


                    <CnGalWebSite.Shared.Component.Lotteries.MainPage.AwardListCard Model="Model.Awards" />

                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="留言板" Icon="fa fa-fw fa-sticky-note-o" Outline>
                        <CnGalWebSite.Shared.MasaComponent.PC.Comments.CommentTip CanComment="Model.CanComment" CanDeleted="IsAdmin" ObjectId="@Model.Id.ToString()" Type="CommentType.CommentLottery" />
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>
                </div>
                <div class="col-12 col-lg-3">

                    <CnGalWebSite.Shared.Component.Lotteries.MainPage.BasicInforCard Model="Model" />

                    <CnGalWebSite.Shared.Component.Lotteries.MainPage.OptionInforCard ViewModel="Model" />
                    <CnGalWebSite.Shared.Component.Lotteries.MainPage.WinningUserListCard Model="Model.Awards" />
                </div>
            </div>
        }



    }
</div>
}


@code {
    private string id = "";
    [Parameter]
    public string Id
    {
        get { return id; }
        set
        {
            id = value;
            if (isFrist == false)
            {
                OnInitializedAsync();

            }
        }
    }

    bool isReady = false;
    bool isNotFound = false;
    public StringNumber TabIndex { get; set; } = 1;

    public LotteryViewModel Model { get; set; } = new LotteryViewModel();

    public PagedResultDto<CommentViewModel> ListComments = new CnGalWebSite.DataModel.Application.Dtos.PagedResultDto<CommentViewModel> { Data = new List<CommentViewModel>(), CurrentPage = 1, TotalCount = 0 };
    public bool IsAdmin { get; set; } = false;
    string LastLookName = "";
    bool isFrist = true;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        //记录数据
        if (LastLookName != Model.Name && string.IsNullOrWhiteSpace(Model.Name) == false)
        {
            LastLookName = Model.Name;
            try
            {
                await JS.InvokeAsync<string>("trackEvent", "抽奖", "浏览", Model.Name, "1", "look");
            }
            catch (Exception exc)
            {

            }
        }
        if (firstRender)
        {

            isFrist = false;
        }
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            isReady = false;
            isNotFound = false;


            //获取周边信息
            Model = await _dataCacheService.LotteryIndexPageCatche.GetCatche(Id);
            //判断投票名称是否为空 为空则跳转到主页
            if (string.IsNullOrWhiteSpace(Model.Name))
            {
                NavigationManager.NavigateTo(Provider, "/votes/home", "主页", "fa fa-home");
            }

            isReady = true;
            StateHasChanged();
            var user = await authenticationStateTask;
            if (user.User.Identity.IsAuthenticated)
            {
                IsAdmin = user.User.IsInRole("Editor");
            }
            else
            {
                _dataCacheService.VoteIndexPageCatche.Clean(Id);
            }


        }
        catch (Exception exc)
        {
            isReady = true;
            isNotFound = true;
            StateHasChanged();
        }

    }

    public Task HiddenStateChanged()
    {
        Model.IsHidden = !Model.IsHidden;
        StateHasChanged();
        return Task.CompletedTask;
    }

}
