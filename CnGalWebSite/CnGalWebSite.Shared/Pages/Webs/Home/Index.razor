@inject HttpClient Http
@inject ToastService? ToastService
@inject IJSRuntime JS
@inject IDataCacheService _dataCacheService


<TitleTip></TitleTip>



<div>
    <div class=" mb-4">
        <BootstrapBlazor.Components.Carousel Images="@Images" IsFade="true" OnClick="OnClick" class="rounded shadow-sm"></BootstrapBlazor.Components.Carousel>
    </div>
    <div class=" mb-4">
        <HomeNewsViewTip></HomeNewsViewTip>
    </div>
    <div class=" mb-4">
        <HomeViewTip></HomeViewTip>
    </div>
</div>




@code {

    private List<string> Images = new List<string>();
    private List<CarouselViewModel> Carousels { get; set; } = new List<CarouselViewModel>();

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    #region 新建标签页
    public async void OpenNewPage(string url)
    {
        await JS.InvokeAsync<string>("openNewPage", url);
    }
    #endregion


    protected override async Task OnInitializedAsync()
    {

        try
        {
            _dataCacheService.RefreshSearchCatche();

            Carousels = await Http.GetFromJsonAsync<List<CarouselViewModel>>(ToolHelper.WebApiPath + "api/home/GetHomeCarouselsView");

            Images = Carousels.Select(s => s.Image).ToList();

        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取主页轮播图列表失败");
        }


    }


    private async Task OnClick(string imageUrl)
    {

        var item = Carousels.FirstOrDefault(s => s.Image == imageUrl);
        if (item != null)
        {
            try
            {
                await JS.InvokeAsync<string>("trackEvent", "轮播图", "点击", item.Link, "1", "click");
            }
            catch (Exception exc)
            {

            }
            OpenNewPage(item.Link);
        }
    }
   

}
