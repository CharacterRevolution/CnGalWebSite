@inject HttpClient Http
@inject ToastService? ToastService
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager


<TitleTip Title="资料站数据汇总"></TitleTip>

<div class="">
    <div class="  rounded shadow-sm  bg-opacity pt-4 pb-1 mb-3">
        <div>
            <h2 class="fw-bold text-center">资料站数据汇总</h2>
            <p class="text-center" style="color: gray;margin-top:20px">
                <i class="fa fa-codepen fa-fw "></i>
                <span class="article-infor-text">@("总计"+Model.EntriesCount + "个词条")</span>&nbsp;&nbsp;&nbsp;

                <i class="fa fa-newspaper-o fa-fw "></i>
                <span class="article-infor-text">@("总计"+Model.ArticlesCount + "篇文章")</span>&nbsp;&nbsp;&nbsp;

                    <br class="d-flex d-md-none "/>
                <i class="fa fa-calendar-check-o fa-fw "></i>
                <span class="article-infor-text">@("最后编辑于"+Model.LastEditTime?.ToString("F")??"1202年2月30日")</span>
            </p>
        </div>
    </div>
    <div class="  rounded shadow-sm  bg-opacity  mb-3">
        <Tab>
            <TabItem Text="游戏" Icon="fa fa-gamepad">
                <GamesTableViewTip OnClickUrl="OnClickUrl"></GamesTableViewTip>
            </TabItem>
            <TabItem Text="制作组" Icon="fa fa-object-group">
                <GroupsTableViewTip OnClickUrl="OnClickUrl"></GroupsTableViewTip>
            </TabItem>
            <TabItem Text="STAFF" Icon="fa fa-star">
                <StaffsTableViewTip></StaffsTableViewTip>
            </TabItem>
            <TabItem Text="制作人" Icon="fa fa-magic">
                <MakersTableViewTip OnClickUrl="OnClickUrl"></MakersTableViewTip>
            </TabItem>
            <TabItem Text="角色" Icon="fa fa-group">
                <RolesTableViewTip OnClickUrl="OnClickUrl"></RolesTableViewTip>
            </TabItem>
            <TabItem Text="游戏价格" Icon="fa fa-money">
                <SteamsTableViewTip></SteamsTableViewTip>
            </TabItem>
        </Tab>
    </div>

</div>
@code {
    private int TabIndex { get; set; } = 0;

    public TableViewModel Model = new TableViewModel();
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }



    protected override async Task OnInitializedAsync()
    {
        try
        {
            //获取服务器基本信息
            Model = await Http.GetFromJsonAsync<TableViewModel>(ToolHelper.WebApiPath + "api/tables/Gettableview");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取汇总数据失败");
        }
    }
    public async void OnClickUrl(NavigateModel model)
    {
        try
        {
            NavigationManager.NavigateTo(Provider, model.Url, model.Title, model.Icon);
        }
        catch
        {
            await ToastService.Error("导航失败", "请尝试刷新页面");
        }
    }

}
