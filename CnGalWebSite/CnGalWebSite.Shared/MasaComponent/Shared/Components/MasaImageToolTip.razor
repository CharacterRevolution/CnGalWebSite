@inject IDataCacheService _dataCacheService
@implements IDisposable

<MTooltip Left>
    <ActivatorContent>

        <MButton Dark XSmall Fab @attributes="@context.Attrs" Color="@(_dataCacheService.ThemeSetting.IsDark?"":"primary")">
            <MIcon>
                @Icon
            </MIcon>
        </MButton>
    </ActivatorContent>
    <ChildContent>
        <img src="@Image" class="pt-3 pb-3" />
    </ChildContent>
</MTooltip>

@code {
    [Parameter]
    public string Icon { get; set; }

    [Parameter]
    public string Image { get; set; }


    protected override async Task OnInitializedAsync()
    {
        _dataCacheService.RefreshRequsted -= RefreshRequsted;
        _dataCacheService.RefreshRequsted += RefreshRequsted;

    }

    public async void RefreshRequsted(object sender, EventArgs args)
    {
        await InvokeAsync(StateHasChanged);

    }
    #region 释放实例

    public void Dispose()
    {

        _dataCacheService.RefreshRequsted -= RefreshRequsted;

        GC.SuppressFinalize(this);
    }
    #endregion
}
