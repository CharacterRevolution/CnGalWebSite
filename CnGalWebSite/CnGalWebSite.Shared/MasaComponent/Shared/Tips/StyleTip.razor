@inject IDataCacheService _dataCacheService
@inject ILocalStorageService _localStorage

@inject IJSRuntime JS


<style>
    :root {
        --main-color: @colorMain;
        --hover-color: @colorHover;
        --active-color: @colorActive;
    }
</style>
<style>
    .layout.is-page.@colorString .layout-header-bar {
        background-color: var(--hover-color);
    }
    .layout.is-page.@colorString .layout-side .layout-banner {
        background-color: var(--active-color);
    }
    .layout.is-page.@colorString .layout-drawer:hover {
        background-color: var(--hover-color);
    }

</style>

@if (_dataCacheService.ThemeSetting.IsDark)
{
    <link href="https://app.cngal.org/_content/CnGalWebSite.Shared/css/github-markdown-dark.css" rel="stylesheet" media="none" onload="this.media='all'">
    <link rel="stylesheet" href="https://app.cngal.org/_content/CnGalWebSite.Shared/css/vs2015.min.css" media="none" onload="this.media='all'" />
    <link rel="stylesheet" href="/styles//dark-cover.min.css" />
    <style>
        [data-bs-toggle="lgbSelect"] .form-select {
            background-color: transparent;
            color: white;
        }
    </style>
    @if(_dataCacheService.IsApp)
    {
        <style>
            .bg-opacity {
            background-color: transparent;
            }
        </style>
    }
}
else
{
    <!-- <link rel="stylesheet" href="//app.cngal.org/_content/CnGalWebSite.Shared/editor.md/css/editormd.min.css" media="none" onload="this.media='all'" />
    -->
    <link rel="stylesheet" href="https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/github-markdown-css/4.0.0/github-markdown.min.css" media="none" onload="this.media='all'" />
    <link rel="stylesheet" href="https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/highlight.js/10.6.0/styles/atom-one-light.min.css" media="none" onload="this.media='all'" />
    <link rel="stylesheet" href="/styles/Lighting-mode.min.css" />

    <style>
        #__vconsole .vc-switch {
            margin-right: 20px;
            box-shadow: 0 0.5rem 1rem rgb(255, 255, 255, 15%) !important;
        }
        .m-application a {
            color: var(--main-color);
        }
    </style>

    if (_dataCacheService.ThemeSetting.IsOnBgImage)
    {
        <link rel="stylesheet" href="https://app.cngal.org/_content/CnGalWebSite.Shared/css/show-background.min.css" />
    }
    else
    {
        <style>
                .layout.is-page .layout-side {
                    background-color: @colorMain !important;
                }

                .layout.is-page .layout-footer {
                    background-color: @colorHover !important;
                }
                #web_bg {
                    display: none;
                }
        </style>
    }
}
@if (_dataCacheService.ThemeSetting.IsOnMouse)
{
    <link rel="stylesheet" href="https://app.cngal.org/_content/CnGalWebSite.Shared/css/mouse.min.css" />


}

@if (_dataCacheService.ThemeSetting.IsOnBgImage && _dataCacheService.ThemeSetting.IsDark == false)
{
    <style>
        .layout.is-page .layout-footer {
            background-color: transparent !important;
            box-shadow: 0 0.5rem 1rem rgb(0 0 0 / 50%) !important;
        }
    </style>


    <AuthorizeView>
        <Authorized>
            @{
                string mimage = "";
                string simage = "";
                foreach (var item in context.User.Claims)
                {
                    if (item.Type == "mbgimage")
                    {
                        mimage = item.Value;
                    }
                    else if (item.Type == "sbgimage")
                    {
                        simage = item.Value;
                    }
                }
            }
            <div id="web_bg" style="background-image: url(@simage)" class=" d-none bg-d-lg-block"></div>
            <div id="web_bg" style="background-image: url(@mimage)" class=" d-none d-sm-block"></div>
        </Authorized>
        <NotAuthorized>
            <div id="web_bg" style="background-image: url(https://app.cngal.org/_content/CnGalWebSite.Shared/images/CnGal5thMin.png) " class=" d-none bg-d-lg-block"></div>
            <div id="web_bg" style="background-image: url(https://app.cngal.org/_content/CnGalWebSite.Shared/images/oppsitebackground.png)" class=" d-none d-sm-block"></div>
        </NotAuthorized>
    </AuthorizeView>
}
else
{
    <style>
        .bgimage-ison {
            display: none !important;
        }
    </style>
}

@code {
    public string colorMain = "#f48fb1";
    public string colorHover = "#D979A2";
    public string colorActive = "#CC578C";
    public string colorString = "color3";


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                //读取本地主题配置
                await LoadTheme();
                //保存本地主题配置 更新数据结构
                await SaveTheme();
            }
            catch
            {

            }

            if (_dataCacheService.ThemeSetting.IsOnMouse)
            {
                await InitMouse();
            }
        }
    }

    /// <summary>
    /// 读取本地主题配置 并刷新
    /// </summary>
    /// <returns></returns>
    public async Task LoadTheme()
    {

        var theme = await _localStorage.GetItemAsync<ThemeModel>("theme");
        if (theme == null)
        {
            return;
        }
        _dataCacheService.ThemeSetting = theme;
        ProcColor();
        StateHasChanged();
    }

    public void ProcColor()
    {
        switch (_dataCacheService.ThemeSetting.Theme)
        {
            case "color1":
                colorMain = "#5E9CFB";
                colorHover = "#5B8BEE";
                colorActive = "#5284ED";
                break;
            case "color2":
                colorMain = "#28B559";
                colorHover = "#1F8B45";
                colorActive = "#1E8650";
                break;
            case "color3":
                colorMain = "#f48fb1";
                colorHover = "#D979A2";
                colorActive = "#CC578C";
                break;
            case "color4":
                colorMain = "#EC8904";
                colorHover = "#B46803";
                colorActive = "#CE7804";
                break;
            case "color5":
                colorMain = "#17a2b8";
                colorHover = "#1ab394";
                colorActive = "#367fa9";
                break;
            case "color6":
                colorMain = "#9D91CA";
                colorHover = "#7E5B95";
                colorActive = "#9D72BA";
                break;

        }

        if (_dataCacheService.ThemeSetting.IsDark)
        {
            colorMain = "#1F1F1F";
            colorHover = "#262626";
            colorActive = "#1F1F1F";
        }

    }

    /// <summary>
    /// 保存本地主题配置
    /// </summary>
    /// <returns></returns>
    public async Task SaveTheme()
    {
        await _localStorage.SetItemAsync("theme", _dataCacheService.ThemeSetting);
    }

    private async Task InitMouse()
    {
        try
        {
            await JS.InvokeAsync<string>("InitMouse");
        }
        catch
        {

        }
    }

    /// <summary>
    /// 刷新
    /// </summary>
    public async void Refresh()
    {
        if (_dataCacheService.ThemeSetting.IsOnMouse)
        {
            await InitMouse();
        }
        ProcColor();
        StateHasChanged();
    }
}
