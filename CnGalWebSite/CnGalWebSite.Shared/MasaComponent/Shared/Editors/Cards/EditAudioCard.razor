@inject IDataCacheService _dataCacheService


<MDialog Value="Dialog" ValueChanged="ValueChanged"
         Width="600">
    <MCard>
        <MCardTitle Class="text-h5">
            编辑音频
        </MCardTitle>
        <MCardText>
            音频的名称和简介会在词条页面展示，优先级会影响展示顺序
        </MCardText>
        <MCardText>
            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.AudioUploadButton Multiple="false" OnUploaded="OnUploaded" Class="mb-4" Text="重新上传音频" Icon="mdi-refresh"/>
            <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAudio Src="@Model.Url" Class="mb-4 w-100"/>
            <div class="row">
                <div class="col-12  col-sm-6">
                    <MTextField @bind-Value="Model.Name" Label="名称" Color="@_dataCacheService.ThemeSetting.Theme" />
                </div>
                <div class="col-12  col-sm-6">
                    <MTextField @bind-Value="Model.Priority" Label="优先级" Color="@_dataCacheService.ThemeSetting.Theme" />
                </div>
                <div class="col-12">
                    <MTextarea Rows="3" @bind-Value="Model.BriefIntroduction" Label="简介" Color="@_dataCacheService.ThemeSetting.Theme" />
                </div>
            </div>

        </MCardText>
    </MCard>
</MDialog>
@code {

    private EditAudioAloneModel Model { get; set; }
    [Parameter]
    public EventCallback OnChanged { get; set; }

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    bool Dialog { get; set; }

    public Task OnUploaded(string url)
    {
        Model.Url = url;

        StateHasChanged();
        return Task.CompletedTask;
    }
    public Task Refresh(EditAudioAloneModel model)
    {
        Model = model;
        Dialog = true;

        StateHasChanged();
        return Task.CompletedTask;
    }

    public async Task ValueChanged(bool dialog)
    {
        Dialog = dialog;
        StateHasChanged();
        await OnChanged.InvokeAsync();
    }

}
