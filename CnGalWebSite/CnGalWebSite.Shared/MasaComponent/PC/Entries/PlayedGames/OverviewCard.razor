@inject IDataCacheService _dataCacheService
@inject NavigationManager NavigationManager


@if (isReady)
{
    @if (Large)
    {
        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="游玩记录" Icon="@IconType.GameRecord.ToIconString()" Class="@Class" ShowMoreButton OnClickMore="OnClickMore">
            <ChildContent>
                <UserScoreGroup Model="Model" OnEdit="OnClickEditGameRecored" ShowBlankAction ShowChart MaxCount="10" />
            </ChildContent>

        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>
    }
    else
    {
        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="游玩记录" Icon="@IconType.GameRecord.ToIconString()" Class="@Class" ShowMoreButton OnClickMore="OnClickMore">
            <ChildContent>
                <TotalScoreCard Model="Model" Outline />
                <div>

                    <AuthorizeView>
                        <Authorized>
                            <MButton Text Block Color="@_dataCacheService.ThemeSetting.Theme" OnClick="OnClickEditGameRecored">
                                <MIcon Left> @(Model.IsCurrentUserScoreExist? "mdi-pencil" : "mdi-plus")</MIcon>
                                @(Model.IsCurrentUserScoreExist? "编辑游玩记录" : "添加游玩记录")
                            </MButton>
                        </Authorized>
                        <NotAuthorized>
                            <MButton Text Block Color="@_dataCacheService.ThemeSetting.Theme" OnClick="OnLogin">
                                <MIcon Left>mdi-login</MIcon>
                                登入后添加游玩记录
                            </MButton>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>

            </ChildContent>

        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>
    }

    @if (Model.GameTotalScores.IsScored)
    {
        <div itemprop="aggregateRating" itemscope itemtype="https://schema.org/AggregateRating">
            <meta itemprop="ratingValue" content="@Model.GameTotalScores.TotalSocre" />
            <meta itemprop="worstRating" content="1">
            <meta itemprop="bestRating" content="10" />
            <meta itemprop="ratingCount" content="@Model.UserScores.Count" />
        </div>

    }


}
<CnGalWebSite.Shared.Component.PlayedGames.EditGameRecordTip @ref="editGameRecordTip" OnChanged="OnChanged" />
<OverviewDialog ShowBlankAction @ref="overviewDialog" />


@code {
    [Parameter]
    public PlayedGameOverviewModel Model { get; set; }
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public string Class { get; set; }
    [Parameter]
    public bool Large { get; set; }

    CnGalWebSite.Shared.Component.PlayedGames.EditGameRecordTip editGameRecordTip;
    OverviewDialog overviewDialog;

    bool isReady;
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await Refresh();
    }

    public async Task Refresh()
    {
        try
        {
            Model = await _dataCacheService.PlayedGameOverviewDataCatche.GetCache(Id.ToString());
            Model.UserScores.Random();
            isReady = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, $"获取评分概览数据失败");
        }
    }

    public Task OnLogin()
    {
        NavigationManager.NavigateTo("/account/login/" + ToolHelper.Base64EncodeUrl(NavigationManager.Uri));
        return Task.CompletedTask;
    }

    public async Task OnClickEditGameRecored()
    {
        if (editGameRecordTip != null)
        {
            await editGameRecordTip.Refresh(true, Id, null, Model.IsDubbing);
        }
    }

    public async Task OnChanged()
    {
        _dataCacheService.PlayedGameOverviewDataCatche.Clean(Id.ToString());
        await Refresh();
    }

    public async Task OnClickMore()
    {
        if (overviewDialog != null)
        {
            await overviewDialog.Refresh(true, Model);
        }
    }
}
