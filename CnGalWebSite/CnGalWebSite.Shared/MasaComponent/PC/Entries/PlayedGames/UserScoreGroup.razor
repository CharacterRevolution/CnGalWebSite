@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService


<div class="@Class">
    <MSlideGroup ShowArrows="true">
        <ChildContent>
            @if (ShowChart)
            {
                <MSlideItem>
                    <MCard Width="350" Class="p-2" Outlined Style="border:0;background-color:transparent"
                           RefBack="@context.Ref">
                        <TotalScoreCard Model="Model" />
                    </MCard>
                </MSlideItem>
            }


            @if (Model.MyRecordExist)
            {
                <MSlideItem>
                    <MCard Width="300" Class="p-2" Outlined Style="border:0;background-color:transparent"
                           RefBack="@context.Ref">
                        <UserScoreCard Model="Model.MyScores" OnEdit="OnEdit" ShowAction IsPublic="Model.MyRecordPublic" />
                    </MCard>
                </MSlideItem>
            }
            else
            {
                if (ShowBlankAction)
                {
                    <MSlideItem>
                        <MCard Width="200" Class="p-2" Outlined Style="border:0;background-color:transparent"
                               OnClick="@context.Toggle"
                               RefBack="@context.Ref">
                            <div class="rounded shadow-sm  bg-opacity h-100" style=" display: flex; justify-content: center; align-items: center; ">
                                <div class="m-4">
                                    <MButton Text Block Color="@_dataCacheService.ThemeSetting.Theme" OnClick="OnEdit">
                                        <MIcon Left>mdi-plus </MIcon>
                                        添加游玩记录
                                    </MButton>


                                </div>
                            </div>
                        </MCard>
                    </MSlideItem>
                }

            }

            @foreach (var item in Items.Take(MaxCount))
            {
                <MSlideItem>
                    <MCard Width="300" Class="p-2" Outlined Style="border:0;background-color:transparent"
                           OnClick="@context.Toggle"
                           RefBack="@context.Ref">
                        <UserScoreCard Model="item" OnClick="@(()=>OnClickUser(item))" />
                    </MCard>
                </MSlideItem>
            }
        </ChildContent>

    </MSlideGroup>
</div>

<UserScoreDialog @ref="userScoreDialog" />

@code {
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }
    [Parameter]
    public PlayedGameOverviewModel Model { get; set; }
    [Parameter]
    public bool ShowChart { get; set; }
    [Parameter]
    public bool ShowBlankAction { get; set; }
    [Parameter]
    public int MaxCount { get; set; } = 9999;

    [Parameter]
    public string Class { get; set; }
    [Parameter]
    public EventCallback OnEdit { get; set; }
    UserScoreDialog userScoreDialog;
    public List<PlayedGameUserScoreModel> Items { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Items = Model.UserScores.Random();
    }

    public async Task OnClickUser(PlayedGameUserScoreModel model)
    {
        if (userScoreDialog != null)
        {
            await userScoreDialog.Refresh(true, model);
        }
    }

}
