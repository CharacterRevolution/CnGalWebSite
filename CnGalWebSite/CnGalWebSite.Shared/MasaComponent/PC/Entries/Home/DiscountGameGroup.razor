@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService




<CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="打折游戏" Icon="fa fa-fw fa-dollar">
    <ButtonContent>
        <MButton Text Block Color="@_dataCacheService.ThemeSetting.Theme" OnClick="OnClickMore">
            <MIcon Left>mdi-share-all-outline  </MIcon>
            查看更多
        </MButton>
    </ButtonContent>
    <ChildContent>
        <MSlideGroup ShowArrows="true">
            <ChildContent>
                @foreach (var item in _dataCacheService.DiscountPageCatcheHelper.Model.Take(12))
                {
                    <MSlideItem>
                        <MCard Width="350" Class="p-2" Outlined Style="border:0;background-color:transparent"
                               OnClick="@context.Toggle"
                               RefBack="@context.Ref">
                            <DiscountGameViewTip Model="item" />
                        </MCard>
                    </MSlideItem>
                }
            </ChildContent>

        </MSlideGroup>
    </ChildContent>

</CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>

@code {
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _dataCacheService.DiscountPageCatcheHelper.Model.Random();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                if (_dataCacheService.DiscountPageCatcheHelper.IsInit == false)
                {
                    _dataCacheService.DiscountPageCatcheHelper.Init(await Http.GetFromJsonAsync<List<SteamInforTipViewModel>>(ToolHelper.WebApiPath + "api/steam/GetAllDiscountSteamGame", ToolHelper.options));

                    try
                    {
                        _dataCacheService.DiscountPageCatcheHelper.PurchasedGames = await Http.GetFromJsonAsync<List<int>>(ToolHelper.WebApiPath + "api/playedgame/GetUserInSteamGameIds", ToolHelper.options);
                    }
                    catch
                    {

                    }

                }

                StateHasChanged();

            }
            catch (Exception ex)
            {
                ErrorHandler.ProcessError(ex, "获取词条主页免费游戏列表失败");
            }
        }
    }

    public Task OnClickMore()
    {
        NavigationManager.NavigateTo("/discount");
        return Task.CompletedTask;
    }

}
