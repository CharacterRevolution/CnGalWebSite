@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCatcheService

<div>

    @if (string.IsNullOrWhiteSpace(Model.MainPicture) == false && HiddenImage == false)
    {
        <img style="width:100%" src="@Model.MainPicture" alt="@Model.Name" itemprop="image">
    }
    <div class="@(Outline?"":"ps-4 pe-4 pt-8") ">

        @if (HiddenTitle == false)
        {
            <div style="display: flex; flex-direction: column; ">
                <h1 class="fw-bold  h3 mb-8" itemprop="headline">@Model.Name</h1>

                <div style="color:gray;" class="mb-8">
                    <i class="fa fa-calendar fa-fw "></i>
                    <span>@((Model.CreateTime.Year<1900?Model.LastEditTime: Model.CreateTime).ToString("yyyy-MM-dd"))</span>&nbsp;&nbsp;&nbsp;
                    <i class="fa fa-eye fa-fw "></i>
                    <span>@(Model.ReaderCount + "次阅读")</span>&nbsp;&nbsp;&nbsp;
                    <i class="fa fa-thumbs-o-up fa-fw "></i>
                    <span>@(Model.ThumbsUpCount + "人点赞")&nbsp; &nbsp; &nbsp;</span>
                </div>


                <div itemprop="author" itemscope itemtype="http://schema.org/Person">
                    <div style="display: flex; flex-wrap: wrap;">
                        <a href="@("/space/index/"+Model.UserInfor.Id)" style=" display: flex; flex-direction: row; align-items: center;" class="a-font-color mb-2 me-4" itemprop="url">

                            <img src="@Model.UserInfor.PhotoPath" alt="@Model.UserInfor.Name" style="width:50px;border-radius:50%;" itemprop="image" />
                            <div style="display: flex; flex-direction: column;" class="ms-4">

                                <RanksViewCard Model="Model.UserInfor.Ranks" NoLeftPandding/>
                                <span style="font-size: large; font-weight: bold; " itemprop="name">
                                    @Model.UserInfor.Name
                                </span>
                            </div>
                        </a>

                        <BadgesViewCard Model="Model.UserInfor.Ranks" />

                    </div>
                      
                      

                </div>

                <hr/>

            </div>
        }

        <div class="@(HiddenTitle?"":"mt-4")">

            @if (string.IsNullOrWhiteSpace(Model.OriginalAuthor) == false && string.IsNullOrWhiteSpace(Model.OriginalLink) == false && HiddenTitle == false)
            {

                <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Info" Class="mb-3">
                    作者：
                    <strong> @Model.OriginalAuthor</strong>
                    &nbsp; 原文发表在：
                    <a href="@Model.OriginalLink" class="info--text fw-bold" style="word-break:break-all;" target="_blank" itemprop="url">@Model.OriginalLink</a>
                </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>

                <div itemprop="author" itemscope itemtype="http://schema.org/Person">
                    @foreach (var item in Model.OriginalAuthor.Replace("，", ",").Replace("、", ",").Split(','))
                    {
                        <meta itemprop="name" content="@item" />

                    }
                </div>
                <div itemprop="publisher" itemscope itemtype="http://schema.org/Person">
                    <meta itemprop="url" content="@(NavigationManager.BaseUri+"space/index/"+Model.UserInfor.Id)" />
                    <meta itemprop="name" content="@Model.UserInfor.Name" />
                    <meta itemprop="image" content="@Model.UserInfor.PhotoPath" />
                </div>
            }
            else
            {
                <div itemprop="author" itemscope itemtype="http://schema.org/Person">
                    <meta itemprop="url" content="@(NavigationManager.BaseUri+"space/index/"+Model.UserInfor.Id)" />
                    <meta itemprop="name" content="@Model.UserInfor.Name" />
                    <meta itemprop="image" content="@Model.UserInfor.PhotoPath" />
                </div>
            }

            @if (Model.MainPageState == EditState.Preview || Model.MainState == EditState.Preview || Model.RelevancesState == EditState.Preview)
            {
                <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.RevokeButton Url="@("/articles/editarticle/" + Model.Id)" OnClickRevoke="OnRevoke"></CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.RevokeButton>
            }
            <MarkdownViewTip Text="@Model.MainPage" IsNeedHighlight="true" />
            <div>
                <CnGalWebSite.Shared.Component.Votes.Relevances.ListRelatedVotesInforCard Type="VoteOptionType.Article" Id="Model.Id" />
            </div>
        </div>
    </div>

    <meta itemprop="datePublished" content="@Model.CreateTime.ToString("G")" />
    <meta itemprop="dateModified" content="@Model.LastEditTime.ToString("G")" />


</div>


@code {
    [Parameter]
    public ArticleViewModel Model { get; set; } = new ArticleViewModel();
    [Parameter]
    public bool HiddenImage { get; set; }
    [Parameter]
    public bool HiddenTitle { get; set; }
    [Parameter]
    public bool Outline { get; set; }
    [Parameter]
    public EventCallback<Operation> OnRevoke { get; set; }

}
