@inject IServiceProvider Provider
@inject NavigationManager NavigationManager

<div class="shadow-sm rounded  ps-4 pe-4 pt-3 pb-3 mb-3 bg-opacity">
    <div style="display: flex; flex-direction: column;">
        <div style=" display: flex;">
            <img class=" shadow-sm" src="@Model.Image"
                 style="height: 45px;width: 45px;border-radius: 50%;" />
            <div class="comment-tx-div">
                <div>
                    <div>@Model.Title</div>
                </div>
                <div>@Model.PostTime.ToString("yyy-MM-dd H:mm")</div>
            </div>

        </div>
        <div class="mt-2">
            <MarkdownViewTip Text="@Model.Text" IsNeedHighlight="false" />
        </div>
        <div class="col-12 p-0 pt-2">
            @if (IsReplying)
            {
                <button class="comment-reply comment-reply-color" style="float: right;" @onclick="OnUnReplyClick">取消回复</button>
            }
            else
            {
                <button class="comment-reply comment-reply-color" style="float: right;" @onclick="OnReplyClick">回复</button>
            }
        </div>
        @if (IsReplying)
        {
            <ReplyCommentTip ObjectId="@CommentId.ToString()" IsChild="true" Type="CommentType.ReplyComment" RelyCallBack="OnRely"></ReplyCommentTip>
        }
    </div>
</div>

@code {
    [Parameter]
    public CnGalWebSite.DataModel.Model.Message Model { get; set; }

    [Parameter]
    public long CommentId { get; set; }

    private bool IsReplying { get; set; }

    public void OnReplyClick()
    {
        IsReplying = true;
        StateHasChanged();
    }

    public void OnUnReplyClick()
    {
        IsReplying = false;
        StateHasChanged();
    }

    public void OnRely()
    {
        IsReplying = false;
        StateHasChanged();
    }
    
}
