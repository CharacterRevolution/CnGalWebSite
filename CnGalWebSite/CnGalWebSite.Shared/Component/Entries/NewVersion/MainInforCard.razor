<div class="rounded shadow bg-opacity rounded p-3">

    @if (Model.IsEdit == true)
    {

        @switch (Model.MainState)
        {
            case EditState.locked:
                <AlertTip Type="AlertTip.AlertTipType.Blocked"></AlertTip>
                break;
            case EditState.Normal:
                <AlertTip Title="编辑主要信息" Type="AlertTip.AlertTipType.Editable" Url="@("/entries/EditMain/" + Model.Id)"></AlertTip>
                break;
        }
    }
    @if (Model.MainState == EditState.Preview)
    {
        <AlertTip Title="编辑主要信息" Type="AlertTip.AlertTipType.preview" Url="@("/entries/EditMain/" + Model.Id)" ExamineType="Operation.EstablishMain" OnClickRevoke="OnRevoke"></AlertTip>
    }

    <div style="display:flex;">
        <div>
            @if (Model.Type == EntryType.Game || Model.Type == EntryType.ProductionGroup)
            {
                <img style="height:200px;" src="@Model.MainPicture" alt="@Model.Name">

            }
            else
            {
                <img style="height:200px;border-radius:50%;" src="@Model.Thumbnail" alt="@Model.Name" >

            }
        </div>
        <div class="ps-3">
            <h1 class="fw-bold h3">@Model.Name</h1>
            <div class="h4" style="margin-bottom: 0.1rem; display: flex; flex-wrap: wrap; ">

                @if (Model.ProductionGroups.Count > 0)
                {
                    <OutlineButton IsTitile="true" Text="制作组" ColorNum="pr" />

                    @foreach (var temp in Model.ProductionGroups)
                    {
                        <OutlineButton IsTitile="false" Text="@temp.DisplayName" ColorNum="pr" IsExist="@( temp.Id>0)" IsShowExistTag="Model.IsEdit"
                                       Url="@(temp.Id>0? "/entries/index/" + temp.Id:"")" Icon="fa fa-codepen" />
                    }
                }
            </div>
            <div class="h4" style="margin-bottom: 0.1rem; display: flex; flex-wrap: wrap; ">
                @if (Model.Publishers.Count > 0)
                {
                    <OutlineButton IsTitile="true" Text="发行商" ColorNum="pr" />

                    @foreach (var temp in Model.Publishers)
                    {
                        <OutlineButton IsTitile="false" Text="@temp.DisplayName" ColorNum="pr" IsExist="@( temp.Id>0)" IsShowExistTag="Model.IsEdit"
                                       Url="@(temp.Id>0? "/entries/index/" + temp.Id:"")" Icon="fa fa-codepen" />
                    }
                }

            </div>
            <span style="overflow: hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 4; -webkit-box-orient: vertical;">
                @Model.BriefIntroduction
            </span>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EntryIndexViewModel Model { get; set; }
    [Parameter]
    public EventCallback<Operation> OnRevoke { get; set; }
}
