@inject IDataCacheService _dataCacheService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS


@if (Model.RelevancesState == EditState.Preview)
{
    <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.RevokeButton Url="@("/entries/EditRelevances/" + Model.Id)" ExamineType="Operation.EstablishRelevances" OnClickRevoke="OnRevoke" />
}
<CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="动态" Icon="fa fa-fw fa-newspaper-o">
    <Scroll style="max-height:500px">
        <MTimeline Dense="_dataCacheService.IsApp||Model.NewsOfEntry.Count<3" Class="ms-2 me-2">
            @foreach (var item in Model.NewsOfEntry.OrderByDescending(s => s.HappenedTime))
            {
                <MTimelineItem Large>
                    <IconContent>
                        <MAvatar Class="pointer" @onclick="@(()=>OnClickImage(item))">
                            <img src="@item.Image" />
                        </MAvatar>
                    </IconContent>
                    <OppositeContent>
                        <span>@item.HappenedTime.ToString("yyyy-MM-dd HH:mm")</span>
                    </OppositeContent>
                    <ChildContent>
                        <MCard Class="elevation-2" @onclick="@(()=>ViewAt(item))">
                            <MCardTitle Class="fw-bold">
                                @item.Title
                            </MCardTitle>
                            <MCardText>
                                @item.BriefIntroduction
                            </MCardText>
                        </MCard>
                    </ChildContent>
                </MTimelineItem>
            }
        </MTimeline>
    </Scroll>

</CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>

@code {
    [Parameter]
    public EntryIndexViewModel Model { get; set; }
    [Parameter]
    public EventCallback<Operation> OnRevoke { get; set; }

    public Task OnClickImage(NewsModel item)
    {
        if (item.GroupId != 0 && item.GroupId != Model.Id)
        {
            NavigationManager.NavigateTo("/entries/index/" + item.GroupId);
        }
        else if (string.IsNullOrWhiteSpace(item.UserId) == false)
        {


            NavigationManager.NavigateTo("/space/index/" + item.UserId);

        }
        return Task.CompletedTask;
    }

    public async void ViewAt(NewsModel item)
    {
        if (string.IsNullOrWhiteSpace(item.Title))
        {
            return;
        }
        if (item.Link.Contains("cngal.org"))
        {
            NavigationManager.NavigateTo(item.Link);
        }
        else
        {
            try
            {
                await JS.InvokeAsync<string>("trackEvent", "动态", "点击", item.Title, "1", "click");
            }
            catch (Exception exc)
            {

            }

            await _dataCacheService.OpenNewPage.InvokeAsync(item.Link);

        }
    }
}
