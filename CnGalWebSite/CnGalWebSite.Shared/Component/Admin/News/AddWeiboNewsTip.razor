@inject ToastService ToastService
@inject DialogService DialogService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IServiceProvider Provider

<style>
    .modal-footer {
        display: none;
    }
</style>


<div class="mb-4">


    <div class="form-group mt-4">
        <div class="row">

            <div class="form-group col-12">
                <BootstrapInput @bind-Value="Model.Link" ShowLabel="true" />
            </div>

        </div>
    </div>

</div>



<div class="mt-3" style="display: flex; justify-content: space-between;">
    <Button Color="Color.Danger" Icon="fa fa-close" class="me-1" @onclick="@OnClickClose" IsAsync="true" Text="取消"></Button>


    <Button Color="Color.Success" Icon="fa fa-save" class="me-1" @onclick="@OnSave" IsAsync="true" Text="保存"></Button>
</div>

@code {
        [Parameter]
        public EventCallback OnClickClose { get; set; }

        public AddWeiboNewsModel Model { get; set; } = new AddWeiboNewsModel();

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {

    }

    public async Task OnSave()
    {
        //上传
        try
        {
            //处理数据
            long temp = 0;
            if (string.IsNullOrWhiteSpace(Model.Link))
            {
                await ToastService.Error("添加微博动态失败", "微博Id无效");
            }


            var result = await Http.PostAsJsonAsync<AddWeiboNewsModel>(ToolHelper.WebApiPath + "api/news/AddWeiboNews", Model);
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("添加微博动态失败", obj.Error);
            }
            else
            {

                await ToastService.Success("添加微博动态成功", "添加微博动态成功");
                await OnClickClose.InvokeAsync();
            }
        }
        catch (Exception ex)
        {
            await ToastService.Error("添加微博动态失败", "添加微博动态失败");
            //ErrorHandler.ProcessError(ex, "保存动态数据失败");
        }
    }
}
