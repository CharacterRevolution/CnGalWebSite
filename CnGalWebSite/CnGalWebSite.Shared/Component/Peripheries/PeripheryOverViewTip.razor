@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ToastService? ToastService

<div>

    @if (isReady)
    {
        @if (Model.Peripheries.Count == 0)
        {
            <div class="alert alert-success  rounded shadow  rounded" role="alert">
                此部分还没有任何内容，你可以尝试<TabLink Text="创建周边" Url="/peripheries/createperiphery" Icon="fa fa-edit" class="alert-link">添加</TabLink>
            </div>
        }
        else
        {
            if (IsEdit)
            {
                <div class="alert alert-primary  rounded shadow  rounded" role="alert">
                    编辑词周边需要到对应周边页面进行编辑哦
                </div>
            }
        }

        @if (Model.Type == PeripheryOverviewHeadType.GameOrGroup || Model.Type == PeripheryOverviewHeadType.RoleOrStaff)
        {
            <TabLink style="display: flex; align-items: center;" class="pb-3 a-font-color" Url="@("/entries/index/"+Model.EntryId+"/20")" Icon="fa fa-codepen" Text="@Model.Name">
                @if (Model.Type == PeripheryOverviewHeadType.GameOrGroup)
                {
                    <img src="@Model.Image" alt="@Model.Name" style="width: 100px; height: auto;" />
                }
                else
                {
                    <img src="@Model.Image" alt="@Model.Name" style="width:50px;height:50px;border-radius:50%;" />

                }
                <div style="display: flex; justify-content: space-between; flex-wrap: wrap; flex-direction: column; min-height: 45px; " class="w-100 ms-3">
                    <div style="display: flex; justify-content: space-between; flex-wrap: wrap;">
                        <div style="display: flex; flex-direction: column; justify-content: flex-end; font-size: large; ">@Model.Name</div>
                        <div>@("收集进度 "+Model.Peripheries.Count(s=>s.IsCollected==true)+"/" + Model.Peripheries.Count)</div>
                    </div>
                    <div>
                        <Progress Value="@((int)((double)Model.Peripheries.Count(s=>s.IsCollected==true)*100/Model.Peripheries.Count))" Color="Color.Success" IsShowValue="true" Height="10"></Progress>
                    </div>
                </div>
            </TabLink>
        }
        else if (Model.Type == PeripheryOverviewHeadType.Periphery)
        {
            <TabLink style="display: flex; align-items: center;" class="pb-3 a-font-color" Url="@("/peripheries/index/"+Model.PeripheryId)" Icon="fa fa-shopping-basket" Text="@Model.Name">
                <img src="@Model.Image" alt="@Model.Name" style="width: 100px; height: auto;" />


                <div style="display: flex; justify-content: space-between; flex-wrap: wrap; flex-direction: column; min-height: 45px; " class="w-100 ms-3">
                    <div style="display: flex; justify-content: space-between; flex-wrap: wrap;">
                        <div style="display: flex; flex-direction: column; justify-content: flex-end; font-size: large; ">@Model.Name</div>
                        <div>@("收集进度 "+Model.Peripheries.Count(s=>s.IsCollected==true)+"/" + Model.Peripheries.Count)</div>
                    </div>
                    <div>
                        <Progress Value="@((int)((double)Model.Peripheries.Count(s=>s.IsCollected==true)*100/Model.Peripheries.Count))" Color="Color.Success" IsShowValue="true" Height="10"></Progress>
                    </div>
                </div>
            </TabLink>
        }
        else if (Model.Type == PeripheryOverviewHeadType.User)
        {
            <TabLink style=" display: flex; align-items: center;" class="pb-3 a-font-color" Url="@(string.IsNullOrWhiteSpace(Model.UserId)?("/account/login/"+ToolHelper.Base64EncodeUrl(NavigationManager.Uri)):( "/space/index/"+Model.UserId+"/11"))" Icon="fa fa-star-o" Text="@Model.Name">
                <img src="@Model.Image" alt="@Model.Name" style="width:50px;height:50px;border-radius:50%;" />
                <div style="display: flex; justify-content: space-between; flex-wrap: wrap; flex-direction: column;min-height:45px; " class="w-100 ms-3">
                    <div style="display: flex; justify-content: space-between; flex-wrap: wrap;">
                        <div style="display: flex; flex-direction: column; justify-content: flex-end; font-size: large; ">@Model.Name</div>
                        <div>@("收集进度 "+Model.Peripheries.Count(s=>s.IsCollected==true)+"/" + Model.Peripheries.Count)</div>
                    </div>
                    <div>
                        <Progress Value="@((int)((double)Model.Peripheries.Count(s=>s.IsCollected==true)*100/Model.Peripheries.Count))" Color="Color.Success" IsShowValue="true" Height="10"></Progress>
                    </div>
                </div>
            </TabLink>
        }

        @if (Model.Peripheries.Count != 0)
        {
            <div style=" display: flex; flex-direction: row; overflow-x: auto; flex-wrap: nowrap; ">
                @foreach (var item in Model.Peripheries)
                {
                    <div class="h-100 me-2" style="width: 170px;">
                        <PeripheryOverviewAloneTip Model="item" />
                    </div>
                }
            </div>
        }


    }
    else
    {
        <div>
            <SkeletonParagraph />
        </div>
    }
</div>

@code {
    [Parameter]
    public int EntryId { get; set; }
    [Parameter]
    public bool IsEdit { get; set; }

    bool isReady = false;
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    [Parameter]
    public GameOverviewPeripheriesModel Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (EntryId > 0)
        {
            try
            {
                Model = await Http.GetFromJsonAsync<GameOverviewPeripheriesModel>(ToolHelper.WebApiPath + "api/peripheries/GetEntryOverviewPeripheries/" + EntryId);
                isReady = true;
            }
            catch(Exception ex)
            {
                ErrorHandler.ProcessError(ex, "获取词条相关周边集合概览失败");
            }

        }
        else
        {
            isReady = true;
        }
    }

}
