@inject IJSRuntime JS


<div class="rounded shadow-sm bg-opacity rounded p-3 h-100 pb-0">
    <div class="pb-3">
        <div>
            <h2 class="fw-bold pb-2 m-0 font-color h5"><i class="fa fa-file-text-o"></i>&nbsp;&nbsp;概览</h2>
        </div>
        <div>
            <div class="markdown-body m-0 p-0" style=" white-space: break-spaces; max-height: 420px; overflow-y: auto;">
                @((MarkupString)Model.EditOverview)
            </div>
        </div>
    </div>
    @if (string.IsNullOrWhiteSpace(Model.Comments) == false)
    {
        <div class="pb-3">
            <div>
                <h2 class="fw-bold pb-2 m-0 font-color h5"><i class="fa fa-tags"></i>&nbsp;&nbsp;批注</h2>
            </div>
            <div>
                @Model.Comments
            </div>
        </div>

    }
    @if (string.IsNullOrWhiteSpace(Model.Note) == false)
    {
        <div class="pb-3">
            <div>
                <h2 class="fw-bold pb-2 m-0 font-color h5"><i class="fa fa-sticky-note-o"></i>&nbsp;&nbsp;备注</h2>
            </div>
            <div>
                @Model.Note
            </div>
        </div>
    }


</div>

@code {
    [Parameter]
    public EditRecordAloneViewModel Model { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        try
        {
            await JS.InvokeAsync<string>("highlightAllCode");
        }
        catch
        {

        }
    }
}
