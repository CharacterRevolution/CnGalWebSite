@inject ToastService ToastService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IServiceProvider Provider
@inject IJSRuntime JS
@inject IDataCacheService _dataCacheService

<CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="最新动态" Icon="fa fa-fw fa-newspaper-o" Class="mb-4">
    <ButtonContent>
            <MButton Text Block Color="@_dataCacheService.ThemeSetting.Theme" OnClick="OnClickMore">
                <MIcon Left>mdi-share-all-outline  </MIcon>
                查看更多
            </MButton>

    </ButtonContent>
    <ChildContent>
        <div class="row" >

            @foreach (var item in Items.Take(6))
            {
                <div class="mb-3 col-12 col-lg-6 pointer">
                    <HomeNewsAloneTip Model="item" OnClickNews="OnClickNews"/>
                </div>
            }
        </div>
    </ChildContent>

</CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>

@code {

    public List<HomeNewsAloneViewModel> Items { get; set; } = new List<HomeNewsAloneViewModel>();

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {

        try
        {
            Items = await _dataCacheService.HomePageNewsCatche.GetCatche(ToolHelper.WebApiPath + "api/home/GetHomeNewsView", true);

            StateHasChanged();
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取主页动态列表失败");
        }
    }

    #region 新建标签页
    public async void OpenNewPage(string url)
    {
        await JS.InvokeAsync<string>("openNewPage", url);
    }
    #endregion
    public async Task OnClickNews(HomeNewsAloneViewModel model)
    {

        try
        {
            await JS.InvokeAsync<string>("trackEvent", "动态", "点击", model.Text, "1", "click");
        }
        catch (Exception exc)
        {

        }

        var link = string.IsNullOrWhiteSpace(model.Link) ? ("/articles/index/" + model.ArticleId) : model.Link;
        bool isOpenNew = string.IsNullOrWhiteSpace(model.Link) == false;
        if (isOpenNew)
        {
            OpenNewPage(link);
        }
        else
        {
            NavigationManager.NavigateTo(Provider, link, model.Text, "fa fa-newspaper-o");
        }
    }

    public Task OnClickMore()
    {
        NavigationManager.NavigateTo("/articles/news");
        return Task.CompletedTask;
    }

}
