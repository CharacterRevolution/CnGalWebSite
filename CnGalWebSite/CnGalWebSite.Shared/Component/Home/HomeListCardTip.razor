@inject ToastService ToastService
@inject HttpClient Http

@if (IsSmallScreen)
{
    <div class=" rounded shadow  bg-opacity rounded ps-3 pe-3 pt-3 pb-3 mb-2 @(IsFrist?"":"mt-4")" style="display: flex; flex-direction: row; justify-content: space-between;">
        <h2 class="fw-bold font-color h4" style="margin-bottom:auto;margin-top:auto;"><i class="@TitleIcon"></i>&nbsp;&nbsp;@Title</h2>
        <TabLink style="float: right"  class="btn btn-outline-dark  btn-sm"  Url="@Url" Text="@UrlName" Icon="@UrlIcon">
            <i class="fa fa-plane"></i>&nbsp;查看全部
        </TabLink>
    </div>

    <div class="row">
        @for (int i = 0; i < Items.Count && i < ItemNum * 2; i++)
        {
            long temp = Items[i].Id;
            string tempName = Items[i].DisPlayName;
            <div class="col-6 col-md-3 mb-2 mt-2">
                <div class="rounded shadow bg-opacity rounded pb-1 h-100">
                    <HomeCardViewTip Icon="fa fa-codepen" Id="temp" Image="@Items[i].Image" ReadCount="Items[i].ReadCount" CommentCount="Items[i].CommentCount" IsSmallScreen="true" 
                                     Name="@Items[i].DisPlayName" Url="@("/"+Type+"/index/" + temp)" ></HomeCardViewTip>
                </div>
            </div>
        }
    </div>

}
else
{
    <div class=" rounded shadow  bg-opacity rounded ps-4 pe-4 pt-3 pb-3 @(IsFrist?"":"mt-4")">
        <TabLink style="float: right"  class="btn btn-outline-dark btn-sm" Url="@Url" Text="@UrlName" Icon="@UrlIcon">
            <i class="fa fa-plane"></i>&nbsp;查看全部
        </TabLink>
        <h2 class="fw-bold mb-4 font-color h4"><i class="@TitleIcon"></i>&nbsp;&nbsp;@Title</h2>
        @if (IsNormalScreen)
        {
            <div class="row">
                @for (int i = 0; i < Items.Count && i < ItemNum * 2; i++)
                {
                    long temp = Items[i].Id;
                    string tempName = Items[i].DisPlayName;
                    <div class="col-6 col-md-3 mb-2">
                        <HomeCardViewTip Icon="fa fa-codepen" Id="temp" Image="@Items[i].Image" ReadCount="Items[i].ReadCount" CommentCount="Items[i].CommentCount"
                                         Name="@Items[i].DisPlayName" Url="@("/"+Type+"/index/" + temp)"></HomeCardViewTip>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="row">
                @for (int i = 0; i < Items.Count && i < 12; i++)
                {
                    long temp = Items[i].Id;
                    string tempName = Items[i].DisPlayName;
                    <div class="col-12 col-md-6 col-lg-2 mb-2">
                        <HomeCardViewTip Icon="fa fa-codepen" Id="temp" Image="@Items[i].Image" ReadCount="Items[i].ReadCount" CommentCount="Items[i].CommentCount"
                                         Name="@Items[i].DisPlayName" Url="@("/"+Type+"/index/" + temp)" ></HomeCardViewTip>
                    </div>
                }
            </div>
        }

    </div>
}


@code {
    int ItemNum = 4;

    public List<EntryHomeAloneViewModel> Items { get; set; } = new List<EntryHomeAloneViewModel>();
    [Parameter]
    public string Url { get; set; }
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string TitleIcon { get; set; }
    [Parameter]
    public string UrlName { get; set; }
    [Parameter]
    public string UrlIcon { get; set; }
    [Parameter]
    public string Type { get; set; }
    [Parameter]
    public string APIUrl { get; set; }

    [Parameter]
    public bool IsSmallScreen { get; set; }
    [Parameter]
    public bool IsNormalScreen { get; set; }
    [Parameter]
    public bool IsLargeScreen { get; set; }

    [Parameter]
    public bool IsFrist { get; set; }

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {
        if (Items.Count == 0)
        {
            try
            {
                //获取主页信息
                Items = await Http.GetFromJsonAsync<List<EntryHomeAloneViewModel>>(ToolHelper.WebApiPath + APIUrl);
                StateHasChanged();
            }
            catch (Exception ex)
            {
                ErrorHandler.ProcessError(ex, "获取主页词条列表失败");
            }
        }

    }
}
