
<div class="mb-1">
    <TitleCollapseCard Icon="fa-codepen" Title="子词条">
        <div class="mt-3">
            @if (IsEdit == true)
            {
                <div class="pb-1">
                    @switch (EditState)
                    {
                        case EditState.locked:
                            <AlertTip Type="AlertTip.AlertTipType.Blocked"></AlertTip>
                            break;
                        case EditState.Normal:
                            <AlertTip Title="编辑子词条" Type="@(Model.Count==0?AlertTip.AlertTipType.Blank: AlertTip.AlertTipType.Editable)" Url="@("/tags/EditChildEntries/" + Id)"></AlertTip>
                            break;
                    }
                </div>
            }
            @if (EditState == EditState.Preview)
            {
                <div class="pb-1">
                    <AlertTip Title="编辑子词条" Type="AlertTip.AlertTipType.preview" Url="@("/tags/EditChildEntries/" + Id)" ExamineType="Operation.EditTagChildEntries" OnClickRevoke="OnClickRevoke"></AlertTip>
                </div>
            }

        </div>
       
        <div class="row mt-3">
            @foreach (var item in Model)
            {
                <div class="@((IsNormalScreen?"col-12 col-md-6 col-lg-4 col-xxl-3":"col-12 col-md-6")+" mb-3")">
                    <TagChildEntryInforTip Model="item" />
                </div>
            }

        </div>
    </TitleCollapseCard>   
</div>

@code {
    [Parameter]
    public List<EntryInforTipViewModel> Model { get; set; } = new List<EntryInforTipViewModel>();
    [Parameter]
    public bool IsNormalScreen { get; set; }
    [Parameter]
    public bool IsEdit { get; set; }
    [Parameter]
    public EditState EditState { get; set; }
    [Parameter]
    public EventCallback<Operation> OnClickRevoke { get; set; }
    [Parameter]
    public long Id { get; set; }

}
