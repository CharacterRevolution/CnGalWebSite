@inject IServiceProvider Provider
@inject NavigationManager NavigationManager
@inject ToastService ToastService
@inject IJSRuntime JS
@inject HttpClient Http

<div style="display: flex; height: calc(100vh); align-content: center; flex-direction: column; justify-content: center;">
    <div class="rounded shadow  ps-4 pe-4 pt-3 pb-3 mb-3 bg-opacity rounded" style="max-width: 600px; margin-left: auto; margin-right: auto; height: fit-content;">
        <div style="width: 100%;">
            <img src="//app.cngal.org/_content/CnGalWebSite.Shared/images/UserMessagesNotFound.png" style="width: 70%;margin-left: 15%;margin-right: 15%;">
            <h4 class="text-center mt-4" style=" font-weight: 600;">这里似乎没有东西呢......</h4>
            <h4 class="text-center mt-2" style=" font-weight: 600;">@("我们会在 "+seconds+" 秒后帮你返回")<TabLink Text="主页" Url="/home" Icon="fa fa-home" class="alert-link">主页</TabLink>哦~</h4>
        </div>
    </div>
</div>

@code {

    System.Threading.Timer mytimer;
    int seconds = 5;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            //启动定时器
            mytimer = new System.Threading.Timer(new System.Threading.TimerCallback(Send), null, 0, 1000);
        }
    }

    public async void Send(object o)
    {
        await InvokeAsync(() =>
        {

            seconds--;
            if (seconds <= 0)
            {
                mytimer.Dispose();
                try
                {
                    NavigationManager.NavigateTo(Provider,"/home", "主页", "fa fa-home");
                }
                catch
                {
                    try
                    {
                        NavigationManager.NavigateTo(Provider,"/home", "主页", "fa fa-home");
                    }
                    catch
                    {

                    }
                }
            }
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        mytimer?.Dispose();
    }
}
