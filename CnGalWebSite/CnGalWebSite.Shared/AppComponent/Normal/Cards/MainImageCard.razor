@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService

<a @onclick="@(()=>OnClick())" class="a-font-color">
    <div class="rounded h-100 shadow-sm  bg-opacity" style="cursor: pointer ">
        <div>
            <img loading="lazy" src="@Model.Image" class="card-img-top" style="word-break: break-all;" alt="@Model.Name" />
            @if (Model.ReadCount >= 0 && Model.CommentCount >= 0)
            {
                <div class="row ms-1" style=" color: white; margin-top: -23px;">
                    <div class="p-0 col-6">
                        <i class="fa fa-eye fa-fw "></i>
                        <span class="article-infor-text">@Model.ReadCount</span>
                    </div>
                    <div class="p-0 col-6">
                        <i class="fa fa-comments-o fa-fw "></i>
                        <span class="article-infor-text">@Model.CommentCount</span>
                    </div>
                </div>

            }
        </div>
        <div class="mb-2" style="padding: 0px; padding: 0px; padding-top: 0.5rem; padding-left: 0.4rem; padding-right: 0.4rem;">
            <span style="font-size: 15px;" class="home-card-name-text">@Model.Name</span>
        </div>
    </div>
</a>

@code {
    [Parameter]
    public MainImageCardModel Model { get; set; }

    public async Task OnClick()
    {

        if (string.IsNullOrWhiteSpace(Model.Url) == false && Model.Url.Contains("http"))
        {
            await _dataCacheService.OpenNewPage.InvokeAsync(Model.Url);
        }
        else
        {
            NavigationManager.NavigateTo(Model.Url);
        }
    }
}
