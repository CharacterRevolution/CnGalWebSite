@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IDataCacheService _dataCacheService

<CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="@Title" Icon="@Icon" Class="mb-3" Outline Small>
    <ButtonContent>
        @if (string.IsNullOrWhiteSpace(Url) == false)
        {
            <MButton XSmall Text Block Color="@_dataCacheService.ThemeSetting.Theme" OnClick="@(()=>NavigationManager.NavigateTo(Url))">
                <MIcon Left>mdi-share-all-outline  </MIcon>
                查看更多
            </MButton>
        }

    </ButtonContent>
    <ChildContent>
        <div class="row">
            @foreach (var item in Items.Take(MaxCount))
            {
                <div class="col-6 col-md-4 mb-3">
                    <CnGalWebSite.Shared.AppComponent.Normal.Cards.MainImageCard Model="@item"></CnGalWebSite.Shared.AppComponent.Normal.Cards.MainImageCard>
                </div>
            }
        </div>
    </ChildContent>

</CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>

@code {
    [Parameter]
    public List<CnGalWebSite.Shared.AppComponent.Normal.Cards.MainImageCardModel> Items { get; set; } = new List<CnGalWebSite.Shared.AppComponent.Normal.Cards.MainImageCardModel>();
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string Url { get; set; }
    [Parameter]
    public string API { get; set; }
    [Parameter]
    public string Icon { get; set; }
    [Parameter]
    public string Type { get; set; }

    [Parameter]
    public int MaxCount { get; set; } = 6;

    protected override async Task OnInitializedAsync()
    {
        Items = await GetHomeCards(API, Type, false) ?? new List<Normal.Cards.MainImageCardModel>();

    }

    private async Task<List<CnGalWebSite.Shared.AppComponent.Normal.Cards.MainImageCardModel>>GetHomeCards(string apiUrl, string type, bool isRefresh)
    {
        return await _dataCacheService.GetHomePageListCardMode(apiUrl, type, MaxCount, isRefresh);
    }
}
