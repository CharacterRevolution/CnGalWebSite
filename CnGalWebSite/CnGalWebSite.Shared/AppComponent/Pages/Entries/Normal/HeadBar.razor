@inject IJSRuntime JS
@inject NavigationManager NavigationManager

<div class="@(ClassName+" apps-headbar-layout")" >
    <div style="display: flex; height: 45px;color:gray; flex-direction: row; align-items: center; justify-content: space-between;"
         class="ms-2 me-2">
        <div style=" display: flex; flex-direction: column; justify-content: center;" class="me-2" @onclick="OnClickBack">
            <i class="fa fa-home fa-fw " style=" font-size: 17px;"></i>
        </div>
        <div class="w-100 text-center">
            @Title
        </div>
        <div style=" display: flex; flex-direction: column; justify-content: center;" class="ms-2" @onclick="OnClickEdit">
            <i class="fa fa-pencil fa-fw " style=" font-size: 17px;"></i>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public EventCallback OnEdit { get; set; }
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string ClassName { get; set; } = "shadow-sm";
    [Parameter]
    public bool CanEdit { get; set; } = true;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public async void OnClickBack()
    {
        NavigationManager.NavigateTo("/");
        //await JS.InvokeAsync<string>("goback");
    }

    public async Task OnClickEdit()
    {
        var user = await authenticationStateTask;

        if (user.User.Identity.IsAuthenticated == false)
        {
            NavigationManager.NavigateTo("/account/apps/login/" + ToolHelper.Base64EncodeUrl(NavigationManager.Uri));
            return;
        }

        await OnEdit.InvokeAsync();
    }

}
