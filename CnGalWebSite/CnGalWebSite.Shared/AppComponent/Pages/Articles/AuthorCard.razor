@inject HttpClient Http
@inject ToastService? ToastService


<div style="display:flex;">
    <a href="@("/space/index/"+UserId)" style="display: flex;align-items: center;">
        <img class="shadow-sm" src="@Image" style="height: 40px;width: 40px;border-radius: 50%;" />
    </a>
    <div class="comment-tx-div" style="font-size:smaller;">
        <a href="@("/space/index/"+UserId)" class="new-row-warp no-margin">
            <div class="comment-username a-font-color me-2">@UserName</div>
            @foreach (var item in Ranks)
            {
                <RankAloneViewTip Model="item"></RankAloneViewTip>
            }
            @if (Time != null)
            {
                <div class="comment-username" style="color:gray;">@Time?.ToTimeFromNowString()</div>
            }
        </a>
        <div class="comment-time" style="color:gray;">@Text</div>
    </div>
</div>


@code {
    [Parameter]
    public string Image { get; set; }
    [Parameter]
    public string UserName { get; set; }
    [Parameter]
    public string UserId { get; set; }
    [Parameter]
    public string Text { get; set; }
    [Parameter]
    public DateTime? Time { get; set; }

    [Parameter]
    public List<RankViewModel> Ranks { get; set; } = new List<RankViewModel>();
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Ranks.Count != 0)
        {
            return;
        }
        try
        {
            if (string.IsNullOrWhiteSpace(UserId))
            {
                return;
            }
            var model = await Http.GetFromJsonAsync<UserInforViewModel>(ToolHelper.WebApiPath + "api/space/GetUserData/" + UserId);
            Ranks = model.Ranks;
            StateHasChanged();
        }
        catch(Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取用户信息失败");
        }
    }
}
